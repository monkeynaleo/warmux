# Makefile.in generated by automake 1.9.6 from Makefile.am.
# po/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Example for use of GNU gettext.
# Copyright (C) 2003 Free Software Foundation, Inc.
# This file is in the public domain.
#
# Makefile configuration - processed by automake.
#
srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/wormux
pkglibdir = $(libdir)/wormux
pkgincludedir = $(includedir)/wormux
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i486-pc-linux-gnu
host_triplet = i486-pc-linux-gnu
target_triplet = i486-pc-linux-gnu
subdir = po
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run tar
AUTOCONF = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run automake-1.9
AWK = gawk
CC = i486-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -g -O2 -I/usr/include/SDL -D_REENTRANT -I/usr/include/libxml++-2.6 -I/usr/include/libxml2 -I/usr/include/glibmm-2.4 -I/usr/lib/glibmm-2.4/include -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
CPP = i486-linux-gnu-gcc -E
CPPFLAGS =  -I/usr/include/SDL -D_REENTRANT
CXX = i486-linux-gnu-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -I/usr/include/SDL -D_REENTRANT -I/usr/include/libxml++-2.6 -I/usr/include/libxml2 -I/usr/include/glibmm-2.4 -I/usr/lib/glibmm-2.4/include -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
CYGPATH_W = echo
DATADIR = games/wormux
DATA_FILES = ./gfx/water.png ./gfx/pointer.png ./gfx/arrow.png ./gfx/rectangle.png ./gfx/water_bottom.png ./map/mer/mer.png ./map/mer/config.xml ./map/mer/preview.jpg ./map/mer/mer-ciel.png ./map/hell/config.xml ./map/hell/preview.jpg ./map/hell/bones.png ./map/hell/hellsky.png ./map/hell/hell.png ./map/noel/config.xml ./map/noel/preview.jpg ./map/noel/nege-anim.png ./map/noel/noel.png ./map/cowland/nuage.png ./map/cowland/cowland.png ./map/cowland/config.xml ./map/cowland/preview.png ./map/cowland/cowland_bg.png ./map/arbre/arbre.png ./map/arbre/config.xml ./map/arbre/preview.jpg ./map/arbre/gland-anim.png ./map/grenouilles/grenouilles.png ./map/grenouilles/nuage.png ./map/grenouilles/config.xml ./map/grenouilles/preview.jpg ./map/grenouilles/jungle.png ./map/space/space.png ./map/space/config.xml ./map/space/preview.jpg ./map/space/lune.png ./map/prehistorik/config.xml ./map/prehistorik/preview.jpg ./map/prehistorik/prehistorik.png ./map/halloween/config.xml ./map/halloween/preview.jpg ./map/halloween/confetis.png ./map/halloween/halloween.png ./map/halloween/noir_lune.png ./map/araignee/abeille.png ./map/araignee/araignee.png ./map/araignee/config.xml ./map/araignee/preview.jpg ./map/banquise/background.png ./map/banquise/config.xml ./map/banquise/preview.jpg ./map/banquise/flocon.png ./map/banquise/banquise.png ./map/pirates/config.xml ./map/pirates/preview.jpg ./map/pirates/pirates.png ./map/pirates/islands.png ./map/libellule/libellule-bg.png ./map/libellule/config.xml ./map/libellule/preview.jpg ./map/libellule/libellule.png ./sky/bleu.png ./sky/prehistorik.png ./font/DejaVuSans.ttf ./menu/img/plus.png ./menu/img/background.png ./menu/img/background_options.png ./menu/img/down.png ./menu/img/button.png ./menu/img/arrow-right.png ./menu/img/minus.png ./menu/img/arrow-left.png ./menu/img/check.png ./menu/img/up.png ./menu/img/loading.png ./menu/img/validate.png ./menu/img/cancel.png ./skin/ver/noye.png ./skin/ver/ver-mort-douce.png ./skin/ver/config.xml ./skin/ver/mort.png ./skin/ver/ver-mort-mechante.png ./skin/ver/marche.png ./skin/ecureuil/ecureuil-jetpack.png ./skin/ecureuil/ecureuil-jump.png ./skin/ecureuil/ecu-mort.png ./skin/ecureuil/config.xml ./skin/ecureuil/ecureuil-jetpackup.png ./skin/ecureuil/ecureuil-jetpack-leftright.png ./skin/ecureuil/ecureuil-anim.png ./skin/ecureuil/ecureuil-helmet.png ./skin/escargot/escargot.png ./skin/escargot/escargot-mort.png ./skin/escargot/escargot-jump.png ./skin/escargot/escargot-fly.png ./skin/escargot/config.xml ./skin/escargot/escargot-jetpack-lr.png ./skin/escargot/escargot-jetpack-up.png ./skin/escargot/escargot-helmet.png ./skin/escargot/clope-anim.png ./skin/alien/alien_mort.png ./skin/alien/noye.png ./skin/alien/alien-jet-walk.png ./skin/alien/alien-helmet.png ./skin/alien/alien-jet-fly.png ./skin/alien/alien-jump.png ./skin/alien/alien-jet-fly-leftright.png ./skin/alien/config.xml ./skin/alien/alien.png ./skin/alien/alien-jet-fly-move.png ./skin/alien/alien-anim.png ./skin/wilberteam/fall.png ./skin/wilberteam/config.xml ./skin/wilberteam/animation.png ./skin/wilberteam/dead.png ./skin/wilberteam/jump.png ./skin/wilberteam/walking.png ./skin/wilberteam/drowned.png ./skin/wilberteam/jetpack-fly-move.png ./skin/wilberteam/helmet.png ./skin/wilberteam/jetpack-fly.png ./skin/wilberteam/jetpack-walk.png ./skin/tuxteam/fall.png ./skin/tuxteam/config.xml ./skin/tuxteam/animation.png ./skin/tuxteam/dead.png ./skin/tuxteam/jump.png ./skin/tuxteam/walking.png ./skin/tuxteam/drowned.png ./skin/tuxteam/jetpack-fly-move.png ./skin/tuxteam/helmet.png ./skin/tuxteam/jetpack-fly.png ./skin/tuxteam/jetpack-walk.png ./skin/gnuteam/fall.png ./skin/gnuteam/config.xml ./skin/gnuteam/animation.png ./skin/gnuteam/dead.png ./skin/gnuteam/jump.png ./skin/gnuteam/walking.png ./skin/gnuteam/drowned.png ./skin/gnuteam/jetpack-fly-move.png ./skin/gnuteam/helmet.png ./skin/gnuteam/jetpack-fly.png ./skin/gnuteam/jetpack-walk.png ./skin/poulpe/poulpe-mort.png ./skin/poulpe/poulpe-jump.png ./skin/poulpe/noye.png ./skin/poulpe/poulpe-helmet.png ./skin/poulpe/breathe.png ./skin/poulpe/poulpe-jp-lr.png ./skin/poulpe/poulpe-jp.png ./skin/poulpe/config.xml ./skin/poulpe/poulpe-jp-up.png ./skin/poulpe/poulpe-anim.png ./skin/poulpe/poulpe-gratte-anim.png ./skin/flament_rose/flament-yeux.png ./skin/flament_rose/flament-mort.png ./skin/flament_rose/flament-jump.png ./skin/flament_rose/config.xml ./skin/flament_rose/flament-anim-helmet.png ./skin/flament_rose/flament-jp.png ./skin/flament_rose/flament-jp-lr.png ./skin/flament_rose/flament-anim.png ./skin/flament_rose/flament-jp-up.png ./skin/firefoxteam/fall.png ./skin/firefoxteam/config.xml ./skin/firefoxteam/animation.png ./skin/firefoxteam/dead.png ./skin/firefoxteam/jump.png ./skin/firefoxteam/walking.png ./skin/firefoxteam/drowned.png ./skin/firefoxteam/jetpack-fly-move.png ./skin/firefoxteam/helmet.png ./skin/firefoxteam/jetpack-fly.png ./skin/firefoxteam/jetpack-walk.png ./skin/konqiteam/fall.png ./skin/konqiteam/config.xml ./skin/konqiteam/animation.png ./skin/konqiteam/dead.png ./skin/konqiteam/jump.png ./skin/konqiteam/walking.png ./skin/konqiteam/drowned.png ./skin/konqiteam/jetpack-fly-move.png ./skin/konqiteam/helmet.png ./skin/konqiteam/jetpack-fly.png ./skin/konqiteam/jetpack-walk.png ./team/ver/team.xml ./team/ver/flag.png ./team/nuts/team.xml ./team/nuts/flag.png ./team/escargot/team.xml ./team/escargot/flag.png ./team/alien/team.xml ./team/alien/flag.png ./team/wilberteam/team.xml ./team/wilberteam/flag.png ./team/gnuteam/team.xml ./team/gnuteam/flag.png ./team/poulpe/team.xml ./team/poulpe/flag.png ./team/firefoxteam/team.xml ./team/firefoxteam/flag.png ./team/pink_floyd/team.xml ./team/pink_floyd/flag.png ./graphism.xml ./sound/default/uuh_01.ogg ./sound/default/uuh_02.ogg ./sound/default/uuh_03.ogg ./sound/default/uuh_04.ogg ./sound/default/uuh_05.ogg ./sound/default/uuh_06.ogg ./sound/default/uuh_07.ogg ./sound/default/uuh_08.ogg ./sound/default/crazy_01.ogg ./sound/default/crazy_02.ogg ./sound/default/crazy_03.ogg ./sound/default/crazy_04.ogg ./sound/default/crazy_05.ogg ./sound/default/death_01.ogg ./sound/default/death_02.ogg ./sound/default/hop_01.ogg ./sound/default/superjump_01.ogg ./sound/default/sink.ogg ./sound/default/step_01.ogg ./sound/default/step_02.ogg ./sound/default/suicide_01.ogg ./sound/default/profile.xml ./sound/default/out_01.ogg ./sound/default/cuss_01.ogg ./sound/default/cuss_02.ogg ./sound/default/cuss_03.ogg ./sound/default/cuss_04.ogg ./sound/default/skip_turn.ogg ./sound/default/fire_01.ogg ./sound/default/fire_02.ogg ./sound/default/hehe.ogg ./sound/share/menu/ok.ogg ./sound/share/menu/clic.ogg ./sound/share/menu/cancel.ogg ./sound/share/explosion.ogg ./sound/share/victory.ogg ./sound/share/profile.xml ./sound/share/step.ogg ./sound/share/frog_music.ogg ./sound/share/end_turn.ogg ./sound/share/laughing.ogg ./sound/flying/profile.xml ./sound/flying/flying.ogg ./sound/francais/crazy.ogg ./sound/francais/profile.xml ./sound/francais/fire_01.ogg ./sound/francais/fire_02.ogg ./weapons.xml ./authors.xml ./object/bonus_box.png ./object/smoke.png ./object/fire.png ./object/smoke2.png ./object/star.png ./wormux-32.xpm ./weapon/grenade_hole.png ./weapon/clusterbomb_ico.png ./weapon/suicide_hole.png ./weapon/teleportation.png ./weapon/ninjanode.png ./weapon/gnu_ico.png ./weapon/corde_ninja_ico.png ./weapon/bazooka_impact.png ./weapon/marteau_piqueur.png ./weapon/sound/holly_grenade_bounce.ogg ./weapon/sound/pistolet.ogg ./weapon/sound/teleport_start.ogg ./weapon/sound/baseball.ogg ./weapon/sound/alleluia.ogg ./weapon/sound/dynamite.ogg ./weapon/sound/dynamite_fuze.ogg ./weapon/sound/grenade_bounce.ogg ./weapon/sound/load.ogg ./weapon/sound/jetpack.ogg ./weapon/sound/gun.ogg ./weapon/sound/teleport_land.ogg ./weapon/sound/mine_beep.ogg ./weapon/sound/uzi.ogg ./weapon/sound/dynamite_exp.ogg ./weapon/sound/commit_suicide.ogg ./weapon/mine_impact.png ./weapon/suicide.png ./weapon/parachute_ico.png ./weapon/supertux.png ./weapon/uzi_impact.png ./weapon/clusterbomb.png ./weapon/suicide_ico.png ./weapon/gun_impact.png ./weapon/baseball_ico.png ./weapon/missile.png ./weapon/airhammer_impact.png ./weapon/skipturn_ico.png ./weapon/air_attack.png ./weapon/gun_bullet.png ./weapon/cluster.png ./weapon/mine_ico.png ./weapon/uzi_ico.png ./weapon/baseball.png ./weapon/baz_cible.png ./weapon/bazooka_explosion.png ./weapon/gnulauncher.png ./weapon/bazooka_auto_ico.png ./weapon/mine_anim.png ./weapon/dynamite/explosion.png ./weapon/dynamite/icon.png ./weapon/dynamite/hole.png ./weapon/dynamite/animation.png ./weapon/dynamite/weapon.png ./weapon/holly_grenade_ico.png ./weapon/teleport_ico.png ./weapon/mine.png ./weapon/lowgrav_ico.png ./weapon/gnu.png ./weapon/bazooka.png ./weapon/bazooka_ico.png ./weapon/jet_pack_ico.png ./weapon/ninjahook.png ./weapon/supertux_ico.png ./weapon/gun.png ./weapon/air_attack_ico.png ./weapon/mine_projectile.png ./weapon/ninjarope_ico.png ./weapon/parachute.png ./weapon/uzi.png ./weapon/grenade_ico.png ./weapon/skipturn.png ./weapon/gun_ico.png ./weapon/obus.png ./weapon/grenade.png ./weapon/marteau_piqueur_ico.png ./weapon/holly_grenade.png ./weapon/superman.png ./weapon/push_ico.png ./weapon/air_attack_plane.png ./interface/Grey-Button.png ./interface/weapons_menu.png ./interface/compteur.png ./interface/game_menu.png ./interface/button1.png ./interface/button2.png ./interface/button3.png ./interface/button4.png ./interface/button5.png ./wormux-128.xpm ./game_mode/old.xml ./game_mode/classic.xml
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GCC_FALSE = #
GCC_TRUE = 
GMSGFMT = /usr/bin/msgfmt
INCLUDEDINTL_FALSE = 
INCLUDEDINTL_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = -lSDL_gfx -lSDL_ttf -lSDL_mixer -lSDL_image  -L/usr/lib -lSDL -lpthread -lSDL_image -lSDL_mixer -lSDL_ttf -lSDL_gfx -lxml++-2.6 -lxml2 -lz -lm -lglibmm-2.4 -lgobject-2.0 -lsigc-2.0 -lglib-2.0  
LOCALEDIR = locale
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/jparpail/Projets/wormux/wormux-0.7beta3/missing --run makeinfo
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = msgmerge
OBJEXT = o
PACKAGE = wormux
PACKAGE_BUGREPORT = wormux-dev@gna.org
PACKAGE_CONFIG = /usr/bin/pkg-config
PACKAGE_NAME = Wormux
PACKAGE_STRING = Wormux 0.7beta3
PACKAGE_TARNAME = wormux
PACKAGE_VERSION = 0.7beta3
PATH_SEPARATOR = :
POSUB = po
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_GFX_PREFIX = 
SDL_LIBS = -L/usr/lib -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STATIC_FALSE = 
STATIC_TRUE = #
STRIP = 
USE_NLS = yes
VERSION = 0.7beta3
XGETTEXT = xgettext
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i486-pc-linux-gnu
build_alias = i486-linux-gnu
build_cpu = i486
build_os = linux-gnu
build_vendor = pc
cxx_present = yes
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i486-pc-linux-gnu
host_alias = i486-linux-gnu
host_cpu = i486
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = /home/jparpail/Projets/wormux/wormux-0.7beta3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/share/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i486-pc-linux-gnu
target_alias = 
target_cpu = i486
target_os = linux-gnu
target_vendor = pc
MAINTAINERCLEANFILES = Makefile.in stamp-po $(GMOFILES)
POTFILES = \
	src/game/config.cpp \
	src/game/game.cpp \
	src/game/game_loop.cpp \
	src/game/game_mode.cpp \
	src/game/time.cpp \
	src/gui/button.cpp \
	src/gui/button_text.cpp \
	src/gui/check_box.cpp \
	src/gui/list_box.cpp \
	src/gui/progress_bar.cpp \
	src/gui/question.cpp \
	src/gui/spin_button.cpp \
	src/main.cpp \
	src/graphic/font.cpp \
	src/graphic/fps.cpp \
	src/graphic/video.cpp \
	src/include/constant.cpp \
	src/interface/cursor.cpp \
	src/interface/game_msg.cpp \
	src/interface/interface.cpp \
	src/interface/keyboard.cpp \
	src/interface/mouse.cpp \
	src/interface/weapon_menu.cpp \
	src/map/camera.cpp \
	src/map/ground.cpp \
	src/map/map.cpp \
	src/map/maps_list.cpp \
	src/map/sky.cpp \
	src/map/tile.cpp \
	src/map/water.cpp \
	src/map/wind.cpp \
	src/menu/game_menu.cpp \
	src/menu/infos_menu.cpp \
	src/menu/main_menu.cpp \
	src/menu/options_menu.cpp \
	src/object/bonus_box.cpp \
	src/object/objects_list.cpp \
	src/object/physical_obj.cpp \
	src/sound/jukebox.cpp \
	src/team/character.cpp \
	src/team/move.cpp \
	src/team/skin.cpp \
	src/team/team.cpp \
	src/team/team_energy.cpp \
	src/team/teams_list.cpp \
	src/tool/error.cpp \
	src/tool/file_tools.cpp \
	src/tool/i18n.cpp \
	src/tool/math_tools.cpp \
	src/tool/random.cpp \
	src/tool/string_tools.cpp \
	src/tool/xml_document.cpp \
	src/weapon/air_attack.cpp \
	src/weapon/auto_bazooka.cpp \
	src/weapon/baseball.cpp \
	src/weapon/bazooka.cpp \
	src/weapon/cluster_bomb.cpp \
	src/weapon/crosshair.cpp \
	src/weapon/dynamite.cpp \
	src/weapon/grenade.cpp \
	src/weapon/gun.cpp \
	src/weapon/mine.cpp \
	src/weapon/suicide.cpp \
	src/weapon/teleportation.cpp \
	src/weapon/weapon.cpp \
	src/weapon/weapon_tools.cpp \
	src/weapon/weapons_list.cpp

DOMAIN = $(PACKAGE)
COPYRIGHT_HOLDER = Wormux Development Team
MSGID_BUGS_ADDRESS = wormux-dev@gna.org
localedir = $(datadir)/locale
MSGMERGE_UPDATE = /usr/bin/msgmerge --quiet --update
MSGINIT = msginit
MSGCONV = msgconv
MSGFILTER = msgfilter

# This is computed as $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
POTFILES_DEPS =  $(top_srcdir)/src/game/config.cpp $(top_srcdir)/src/game/game.cpp $(top_srcdir)/src/game/game_loop.cpp $(top_srcdir)/src/game/game_mode.cpp $(top_srcdir)/src/game/time.cpp $(top_srcdir)/src/gui/button.cpp $(top_srcdir)/src/gui/button_text.cpp $(top_srcdir)/src/gui/check_box.cpp $(top_srcdir)/src/gui/list_box.cpp $(top_srcdir)/src/gui/progress_bar.cpp $(top_srcdir)/src/gui/question.cpp $(top_srcdir)/src/gui/spin_button.cpp $(top_srcdir)/src/main.cpp $(top_srcdir)/src/graphic/font.cpp $(top_srcdir)/src/graphic/fps.cpp $(top_srcdir)/src/graphic/video.cpp $(top_srcdir)/src/include/constant.cpp $(top_srcdir)/src/interface/cursor.cpp $(top_srcdir)/src/interface/game_msg.cpp $(top_srcdir)/src/interface/interface.cpp $(top_srcdir)/src/interface/keyboard.cpp $(top_srcdir)/src/interface/mouse.cpp $(top_srcdir)/src/interface/weapon_menu.cpp $(top_srcdir)/src/map/camera.cpp $(top_srcdir)/src/map/ground.cpp $(top_srcdir)/src/map/map.cpp $(top_srcdir)/src/map/maps_list.cpp $(top_srcdir)/src/map/sky.cpp $(top_srcdir)/src/map/tile.cpp $(top_srcdir)/src/map/water.cpp $(top_srcdir)/src/map/wind.cpp $(top_srcdir)/src/menu/game_menu.cpp $(top_srcdir)/src/menu/infos_menu.cpp $(top_srcdir)/src/menu/main_menu.cpp $(top_srcdir)/src/menu/options_menu.cpp $(top_srcdir)/src/object/bonus_box.cpp $(top_srcdir)/src/object/objects_list.cpp $(top_srcdir)/src/object/physical_obj.cpp $(top_srcdir)/src/sound/jukebox.cpp $(top_srcdir)/src/team/character.cpp $(top_srcdir)/src/team/move.cpp $(top_srcdir)/src/team/skin.cpp $(top_srcdir)/src/team/team.cpp $(top_srcdir)/src/team/team_energy.cpp $(top_srcdir)/src/team/teams_list.cpp $(top_srcdir)/src/tool/error.cpp $(top_srcdir)/src/tool/file_tools.cpp $(top_srcdir)/src/tool/i18n.cpp $(top_srcdir)/src/tool/math_tools.cpp $(top_srcdir)/src/tool/random.cpp $(top_srcdir)/src/tool/string_tools.cpp $(top_srcdir)/src/tool/xml_document.cpp $(top_srcdir)/src/weapon/air_attack.cpp $(top_srcdir)/src/weapon/auto_bazooka.cpp $(top_srcdir)/src/weapon/baseball.cpp $(top_srcdir)/src/weapon/bazooka.cpp $(top_srcdir)/src/weapon/cluster_bomb.cpp $(top_srcdir)/src/weapon/crosshair.cpp $(top_srcdir)/src/weapon/dynamite.cpp $(top_srcdir)/src/weapon/grenade.cpp $(top_srcdir)/src/weapon/gun.cpp $(top_srcdir)/src/weapon/mine.cpp $(top_srcdir)/src/weapon/suicide.cpp $(top_srcdir)/src/weapon/teleportation.cpp $(top_srcdir)/src/weapon/weapon.cpp $(top_srcdir)/src/weapon/weapon_tools.cpp $(top_srcdir)/src/weapon/weapons_list.cpp

# This is computed as $(foreach lang, $(LINGUAS), $(srcdir)/$(lang).po)
POFILES =  ca.po de.po eo.po es.po fr.po hu.po it.po nl.po pl.po pt.po sk.po ru.po
# This is computed as $(foreach lang, $(LINGUAS), $(srcdir)/$(lang).gmo)
GMOFILES =  ca.gmo de.gmo eo.gmo es.gmo fr.gmo hu.gmo it.gmo nl.gmo pl.gmo pt.gmo sk.gmo ru.gmo
# This is computed as $(foreach lang, $(LINGUAS), $(lang).po-update)
UPDATEPOFILES =  ca.po-update de.po-update eo.po-update es.po-update fr.po-update hu.po-update it.po-update nl.po-update pl.po-update pt.po-update sk.po-update ru.po-update
# This is computed as $(foreach lang, $(LINGUAS), $(lang).nop)
DUMMYPOFILES =  ca.nop de.nop eo.nop es.nop fr.nop hu.nop it.nop nl.nop pl.nop pt.nop sk.nop ru.nop

# This is computed as
# $(foreach lang, user-specified subset of $(LINGUAS), $(lang).gmo)
CATALOGS =  ca.gmo de.gmo eo.gmo es.gmo fr.gmo hu.gmo it.gmo nl.gmo pl.gmo pt.gmo sk.gmo ru.gmo
SUFFIXES = .po .gmo .mo .sed .sin .nop .po-update
MOSTLYCLEANFILES = stamp-poT core core.* $(DOMAIN).po $(DOMAIN).1po \
	$(DOMAIN).2po *.new.po *.o *.gmo $(srcdir)/$(DOMAIN).pot *.*~
DISTCLEANFILES = *.mo *.gmo
EXTRA_DIST = LINGUAS $(DOMAIN).pot stamp-po $(POFILES)
all: all-am

.SUFFIXES:
.SUFFIXES: .po .gmo .mo .sed .sin .nop .po-update
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  po/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  po/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
uninstall-info-am:
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile all-local
installdirs: installdirs-local
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-local

.PHONY: all all-am all-local check check-am clean clean-generic \
	distclean distclean-generic distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-data-local install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-local maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am uninstall-info-am \
	uninstall-local


.po.gmo:
	@lang=`echo $* | sed -e 's,.*/,,'`; \
	test "$(srcdir)" = . && cdcmd="" || cdcmd="cd $(srcdir) && "; \
	echo "Create $${lang}.gmo"; \
	cd $(srcdir) && rm -f $${lang}.gmo && $(GMSGFMT) -c -o t-$${lang}.gmo $${lang}.po && mv t-$${lang}.gmo $${lang}.gmo

.sin.sed:
	@echo "Create $@ file"
	@sed -e '/^#/d' $< > t-$@
	@mv t-$@ $@

all-local: all-local-yes $(GMOFILES)

all-local-yes: stamp-po
all-local-no:

# stamp-po is a timestamp denoting the last time at which the CATALOGS have
# been loosely updated. Its purpose is that when a developer or translator
# checks out the package via CVS, and the $(DOMAIN).pot file is not in CVS,
# "make" will update the $(DOMAIN).pot and the $(CATALOGS), but subsequent
# invocations of "make" will do nothing. This timestamp would not be necessary
# if updating the $(CATALOGS) would always touch them; however, the rule for
# $(POFILES) has been designed to not touch files that don't need to be
# changed.
stamp-po: $(srcdir)/$(DOMAIN).pot
	test -z "$(GMOFILES)" || $(MAKE) $(GMOFILES)
	@echo "touch stamp-po"
	@echo timestamp > stamp-poT
	@mv stamp-poT stamp-po

# Note: Target 'all' must not depend on target '$(DOMAIN).pot-update',
# otherwise packages like GCC can not be built if only parts of the source
# have been downloaded.

# This target rebuilds $(DOMAIN).pot; it is an expensive operation.
# Note that $(DOMAIN).pot is not touched if it doesn't need to be changed.
$(DOMAIN).pot-update: $(POTFILES_DEPS)
	@echo "Create $(DOMAIN).pot"
	@$(XGETTEXT) \
	  -o $(DOMAIN).pot -k'_' -s --from-code iso-8859-1 \
	  --default-domain=$(DOMAIN) --directory=$(top_srcdir) \
	  --add-comments=TRANSLATORS: $(XGETTEXT_OPTIONS) \
	  --copyright-holder='$(COPYRIGHT_HOLDER)' \
	  --msgid-bugs-address='$(MSGID_BUGS_ADDRESS)' \
	  $(POTFILES)
	@test ! -f $(DOMAIN).po || { \
	  if test -f $(srcdir)/$(DOMAIN).pot; then \
	    sed -e '/^"POT-Creation-Date:/D' < $(srcdir)/$(DOMAIN).pot > $(DOMAIN).1po && \
	    sed -e '/^"POT-Creation-Date:/D' < $(DOMAIN).po > $(DOMAIN).2po && \
	    if cmp $(DOMAIN).1po $(DOMAIN).2po >/dev/null 2>&1; then \
	      rm -f $(DOMAIN).1po $(DOMAIN).2po $(DOMAIN).po; \
	    else \
	      rm -f $(DOMAIN).1po $(DOMAIN).2po $(srcdir)/$(DOMAIN).pot && \
	      mv $(DOMAIN).po $(srcdir)/$(DOMAIN).pot; \
	    fi; \
	  else \
	    mv $(DOMAIN).po $(srcdir)/$(DOMAIN).pot; \
	  fi; \
	}

# This rule has no dependencies: we don't need to update $(DOMAIN).pot at
# every "make" invocation, only create it when it is missing.
# Only "make $(DOMAIN).pot-update" or "make dist" will force an update.
$(srcdir)/$(DOMAIN).pot:
	$(MAKE) $(DOMAIN).pot-update

# This target rebuilds a PO file if $(DOMAIN).pot has changed.
# Note that a PO file is not touched if it doesn't need to be changed.
$(POFILES): $(srcdir)/$(DOMAIN).pot
	@lang=`echo $@ | sed -e 's,.*/,,' -e 's/\.po$$//'`; \
	test "$(srcdir)" = . && cdcmd="" || cdcmd="cd $(srcdir) && "; \
	echo "Update $${lang}.po"; \
	cd $(srcdir) && $(MSGMERGE_UPDATE) $${lang}.po $(DOMAIN).pot && \
	sed -e '/^"POT-Creation-Date:/D' <$${lang}.po >t-$${lang}.po && \
	mv -f t-$${lang}.po $${lang}.po 

install-data-local: install-data-local-yes
install-data-local-no: all-local
install-data-local-yes: all-local
	$(mkinstalldirs) $(DESTDIR)$(datadir)
	for cat in $(CATALOGS); do \
	  cat=`basename $$cat`; \
	  lang=`echo $$cat | sed -e 's/\.gmo$$//'`; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  $(mkinstalldirs) $(DESTDIR)$$dir; \
	  if test -r $$cat; then realcat=$$cat; else realcat=$(srcdir)/$$cat; fi; \
	  $(INSTALL_DATA) $$realcat $(DESTDIR)$$dir/$(DOMAIN).mo; \
	  echo "installing $$realcat as $(DESTDIR)$$dir/$(DOMAIN).mo"; \
	  for lc in '' $(EXTRA_LOCALE_CATEGORIES); do \
	    if test -n "$$lc"; then \
	      if (cd $(DESTDIR)$(localedir)/$$lang && LC_ALL=C ls -l -d $$lc 2>/dev/null) | grep ' -> ' >/dev/null; then \
	        link=`cd $(DESTDIR)$(localedir)/$$lang && LC_ALL=C ls -l -d $$lc | sed -e 's/^.* -> //'`; \
	        mv $(DESTDIR)$(localedir)/$$lang/$$lc $(DESTDIR)$(localedir)/$$lang/$$lc.old; \
	        mkdir $(DESTDIR)$(localedir)/$$lang/$$lc; \
	        (cd $(DESTDIR)$(localedir)/$$lang/$$lc.old && \
	         for file in *; do \
	           if test -f $$file; then \
	             ln -s ../$$link/$$file $(DESTDIR)$(localedir)/$$lang/$$lc/$$file; \
	           fi; \
	         done); \
	        rm -f $(DESTDIR)$(localedir)/$$lang/$$lc.old; \
	      else \
	        if test -d $(DESTDIR)$(localedir)/$$lang/$$lc; then \
	          :; \
	        else \
	          rm -f $(DESTDIR)$(localedir)/$$lang/$$lc; \
	          mkdir $(DESTDIR)$(localedir)/$$lang/$$lc; \
	        fi; \
	      fi; \
	      rm -f $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo; \
	      ln -s ../LC_MESSAGES/$(DOMAIN).mo $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo 2>/dev/null || \
	      ln $(DESTDIR)$(localedir)/$$lang/LC_MESSAGES/$(DOMAIN).mo $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo 2>/dev/null || \
	      cp -p $(DESTDIR)$(localedir)/$$lang/LC_MESSAGES/$(DOMAIN).mo $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo; \
	      echo "installing $$realcat link as $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo"; \
	    fi; \
	  done; \
	done

installdirs-local: installdirs-local-yes
installdirs-local-no:
installdirs-local-yes:
	$(mkinstalldirs) $(DESTDIR)$(datadir)
	@catalogs='$(CATALOGS)'; \
	for cat in $$catalogs; do \
	  cat=`basename $$cat`; \
	  lang=`echo $$cat | sed -e 's/\.gmo$$//'`; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  $(mkinstalldirs) $(DESTDIR)$$dir; \
	  for lc in '' $(EXTRA_LOCALE_CATEGORIES); do \
	    if test -n "$$lc"; then \
	      if (cd $(DESTDIR)$(localedir)/$$lang && LC_ALL=C ls -l -d $$lc 2>/dev/null) | grep ' -> ' >/dev/null; then \
	        link=`cd $(DESTDIR)$(localedir)/$$lang && LC_ALL=C ls -l -d $$lc | sed -e 's/^.* -> //'`; \
	        mv $(DESTDIR)$(localedir)/$$lang/$$lc $(DESTDIR)$(localedir)/$$lang/$$lc.old; \
	        mkdir $(DESTDIR)$(localedir)/$$lang/$$lc; \
	        (cd $(DESTDIR)$(localedir)/$$lang/$$lc.old && \
	         for file in *; do \
	           if test -f $$file; then \
	             ln -s ../$$link/$$file $(DESTDIR)$(localedir)/$$lang/$$lc/$$file; \
	           fi; \
	         done); \
	        rm -f $(DESTDIR)$(localedir)/$$lang/$$lc.old; \
	      else \
	        if test -d $(DESTDIR)$(localedir)/$$lang/$$lc; then \
	          :; \
	        else \
	          rm -f $(DESTDIR)$(localedir)/$$lang/$$lc; \
	          mkdir $(DESTDIR)$(localedir)/$$lang/$$lc; \
	        fi; \
	      fi; \
	    fi; \
	  done; \
	done

uninstall-local: uninstall-local-yes
uninstall-local-no:
uninstall-local-yes:
	catalogs='$(CATALOGS)'; \
	for cat in $$catalogs; do \
	  cat=`basename $$cat`; \
	  lang=`echo $$cat | sed -e 's/\.gmo$$//'`; \
	  for lc in LC_MESSAGES $(EXTRA_LOCALE_CATEGORIES); do \
	    rm -f $(DESTDIR)$(localedir)/$$lang/$$lc/$(DOMAIN).mo; \
	  done; \
	done

html ID:

# Hidden from automake, but really activated. Works around an automake-1.5 bug.
distdir: distdir1
distdir1:
	$(MAKE) update-po

update-po: Makefile
	$(MAKE) $(DOMAIN).pot-update
	test -z "$(UPDATEPOFILES)" || $(MAKE) $(UPDATEPOFILES)
	$(MAKE) update-gmo

# General rule for updating PO files.

.nop.po-update:
	@lang=`echo $@ | sed -e 's/\.po-update$$//'`; \
	tmpdir=`pwd`; \
	echo "$$lang:"; \
	test "$(srcdir)" = . && cdcmd="" || cdcmd="cd $(srcdir) && "; \
	echo "$${cdcmd}$(MSGMERGE) $$lang.po $(DOMAIN).pot -o $$lang.new.po"; \
	cd $(srcdir); \
	if $(MSGMERGE) $$lang.po $(DOMAIN).pot -o $$tmpdir/$$lang.new.po; then \
	  if cmp $$lang.po $$tmpdir/$$lang.new.po >/dev/null 2>&1; then \
	    rm -f $$tmpdir/$$lang.new.po; \
	  else \
	    if mv -f $$tmpdir/$$lang.new.po $$lang.po; then \
	      :; \
	    else \
	      echo "msgmerge for $$lang.po failed: cannot move $$tmpdir/$$lang.new.po to $$lang.po" 1>&2; \
	      exit 1; \
	    fi; \
	  fi; \
	else \
	  echo "msgmerge for $$lang.po failed!" 1>&2; \
	  rm -f $$tmpdir/$$lang.new.po; \
	fi

$(DUMMYPOFILES):

update-gmo: Makefile $(GMOFILES)
	@:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
Makefile:  LINGUAS
