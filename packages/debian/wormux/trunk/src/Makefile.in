# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = wormux$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_wormux_OBJECTS = constant.$(OBJEXT) global.$(OBJEXT) \
	action.$(OBJEXT) action_handler.$(OBJEXT) main.$(OBJEXT) \
	config.$(OBJEXT) game_mode.$(OBJEXT) game.$(OBJEXT) \
	game_loop.$(OBJEXT) fps.$(OBJEXT) video.$(OBJEXT) \
	text.$(OBJEXT) effects.$(OBJEXT) button.$(OBJEXT) \
	button_text.$(OBJEXT) check_box.$(OBJEXT) label.$(OBJEXT) \
	list_box.$(OBJEXT) spin_button.$(OBJEXT) box.$(OBJEXT) \
	widget.$(OBJEXT) null_widget.$(OBJEXT) string_tools.$(OBJEXT) \
	xml_document.$(OBJEXT) i18n.$(OBJEXT) error.$(OBJEXT) \
	file_tools.$(OBJEXT) math_tools.$(OBJEXT) \
	resource_manager.$(OBJEXT) stats.$(OBJEXT) random.$(OBJEXT) \
	debug.$(OBJEXT) jukebox.$(OBJEXT) font.$(OBJEXT) \
	sprite.$(OBJEXT) weapon_menu.$(OBJEXT) main_menu.$(OBJEXT) \
	menu.$(OBJEXT) infos_menu.$(OBJEXT) options_menu.$(OBJEXT) \
	game_menu.$(OBJEXT) time.$(OBJEXT) progress_bar.$(OBJEXT) \
	question.$(OBJEXT) interface.$(OBJEXT) cursor.$(OBJEXT) \
	game_msg.$(OBJEXT) mouse.$(OBJEXT) keyboard.$(OBJEXT) \
	physical_obj.$(OBJEXT) physics.$(OBJEXT) bonus_box.$(OBJEXT) \
	objects_list.$(OBJEXT) particle.$(OBJEXT) map.$(OBJEXT) \
	maps_list.$(OBJEXT) sky.$(OBJEXT) tile.$(OBJEXT) \
	water.$(OBJEXT) wind.$(OBJEXT) camera.$(OBJEXT) \
	ground.$(OBJEXT) character.$(OBJEXT) move.$(OBJEXT) \
	skin.$(OBJEXT) team.$(OBJEXT) team_energy.$(OBJEXT) \
	teams_list.$(OBJEXT) weapon.$(OBJEXT) weapon_cfg.$(OBJEXT) \
	weapons_list.$(OBJEXT) weapon_tools.$(OBJEXT) \
	crosshair.$(OBJEXT) air_attack.$(OBJEXT) \
	auto_bazooka.$(OBJEXT) baseball.$(OBJEXT) bazooka.$(OBJEXT) \
	cluster_bomb.$(OBJEXT) dynamite.$(OBJEXT) gnu.$(OBJEXT) \
	grenade.$(OBJEXT) gun.$(OBJEXT) mine.$(OBJEXT) \
	skip_turn.$(OBJEXT) suicide.$(OBJEXT) teleportation.$(OBJEXT) \
	holly_grenade.$(OBJEXT) airhammer.$(OBJEXT) uzi.$(OBJEXT) \
	jetpack.$(OBJEXT) lowgrav.$(OBJEXT) ninja_rope.$(OBJEXT) \
	parachute.$(OBJEXT) supertux.$(OBJEXT)
wormux_OBJECTS = $(am_wormux_OBJECTS)
wormux_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(wormux_SOURCES)
DIST_SOURCES = $(wormux_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkgdatadir = $(datadir)/@DATADIR@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIR = @DATADIR@
DATA_FILES = @DATA_FILES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GCC_FALSE = @GCC_FALSE@
GCC_TRUE = @GCC_TRUE@
GMSGFMT = @GMSGFMT@
INCLUDEDINTL_FALSE = @INCLUDEDINTL_FALSE@
INCLUDEDINTL_TRUE = @INCLUDEDINTL_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LOCALEDIR = @LOCALEDIR@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_CONFIG = @PACKAGE_CONFIG@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSUB = @POSUB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_GFX_PREFIX = @SDL_GFX_PREFIX@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STATIC_FALSE = @STATIC_FALSE@
STATIC_TRUE = @STATIC_TRUE@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
cxx_present = @cxx_present@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
SUBDIRS = .
localedir = $(datadir)/@LOCALEDIR@
wormux_SOURCES = \
	include/base.h include/enum.h \
	include/constant.cpp include/constant.h \
	include/global.cpp include/global.h \
	include/action.cpp include/action.h \
	include/action_handler.cpp include/action_handler.h \
	include/app.h main.cpp \
	game/config.cpp game/config.h \
	game/game_mode.cpp game/game_mode.h \
	game/game.cpp game/game.h \
	game/game_loop.cpp game/game_loop.h \
	graphic/colors.h \
	graphic/fps.cpp graphic/fps.h \
	graphic/video.cpp graphic/video.h \
	graphic/text.cpp graphic/text.h \
	graphic/effects.cpp graphic/effects.h \
	gui/button.cpp gui/button.h \
	gui/button_text.cpp gui/button_text.h \
	gui/check_box.cpp gui/check_box.h \
	gui/label.cpp gui/label.h \
	gui/list_box.cpp gui/list_box.h \
	gui/spin_button.cpp gui/spin_button.h \
	gui/box.cpp gui/box.h \
	gui/widget.cpp gui/widget.h \
	gui/null_widget.cpp gui/null_widget.h \
	tool/string_tools.cpp tool/string_tools.h \
	tool/xml_document.cpp tool/xml_document.h \
	tool/i18n.cpp tool/i18n.h \
	tool/error.cpp tool/error.h \
	tool/file_tools.cpp tool/file_tools.h \
	tool/math_tools.cpp tool/math_tools.h \
	tool/Rectangle.h tool/Point.h \
	tool/resource_manager.cpp tool/resource_manager.h \
	tool/stats.cpp tool/stats.h \
	tool/random.cpp tool/random.h \
	tool/debug.cpp tool/debug.h \
	sound/jukebox.cpp sound/jukebox.h \
	graphic/font.cpp graphic/font.h \
	graphic/sprite.cpp graphic/sprite.h \
	interface/weapon_menu.cpp interface/weapon_menu.h \
	menu/main_menu.cpp menu/main_menu.h \
	menu/menu.cpp menu/menu.h \
	menu/infos_menu.cpp menu/infos_menu.h \
	menu/options_menu.cpp menu/options_menu.h \
	menu/game_menu.cpp menu/game_menu.h \
	game/time.cpp game/time.h \
	gui/progress_bar.cpp gui/progress_bar.h \
	gui/question.cpp gui/question.h \
	interface/interface.cpp interface/interface.h \
	interface/cursor.cpp interface/cursor.h \
	interface/game_msg.cpp interface/game_msg.h \
	interface/mouse.cpp interface/mouse.h \
	interface/keyboard.cpp interface/keyboard.h \
	object/physical_obj.cpp object/physical_obj.h \
	object/physics.cpp object/physics.h \
	object/bonus_box.cpp object/bonus_box.h \
	object/objects_list.cpp object/objects_list.h \
	object/particle.cpp object/particle.h \
	map/map.cpp map/map.h \
	map/maps_list.cpp map/maps_list.h \
	map/sky.cpp map/sky.h \
	map/tile.cpp map/tile.h \
	map/water.cpp map/water.h \
	map/wind.cpp map/wind.h \
	map/camera.cpp map/camera.h \
	map/ground.cpp map/ground.h \
	team/macro.h \
	team/character.cpp team/character.h \
	team/move.cpp team/move.h \
	team/skin.cpp team/skin.h \
	team/team.cpp team/team.h \
	team/team_energy.cpp team/team_energy.h \
	team/teams_list.cpp team/teams_list.h \
	weapon/all.h \
	weapon/weapon.cpp weapon/weapon.h \
	weapon/weapon_cfg.cpp weapon/weapon_cfg.h \
	weapon/weapons_list.cpp weapon/weapons_list.h \
	weapon/weapon_tools.cpp weapon/weapon_tools.h \
	weapon/crosshair.cpp weapon/crosshair.h \
	weapon/air_attack.cpp weapon/air_attack.h \
	weapon/auto_bazooka.cpp weapon/auto_bazooka.h \
	weapon/baseball.cpp weapon/baseball.h \
	weapon/bazooka.cpp weapon/bazooka.h \
	weapon/cluster_bomb.cpp weapon/cluster_bomb.h \
	weapon/dynamite.cpp weapon/dynamite.h \
	weapon/gnu.cpp weapon/gnu.h \
	weapon/grenade.cpp weapon/grenade.h \
	weapon/gun.cpp weapon/gun.h \
	weapon/mine.cpp weapon/mine.h \
	weapon/skip_turn.cpp weapon/skip_turn.h \
	weapon/suicide.cpp weapon/suicide.h \
	weapon/teleportation.cpp weapon/teleportation.h \
	weapon/holly_grenade.cpp weapon/holly_grenade.h \
	weapon/airhammer.cpp weapon/airhammer.h \
	weapon/uzi.cpp weapon/uzi.h \
	weapon/jetpack.cpp weapon/jetpack.h\
	weapon/lowgrav.cpp weapon/lowgrav.h \
	weapon/ninja_rope.cpp weapon/ninja_rope.h \
	weapon/parachute.cpp weapon/parachute.h \
	weapon/supertux.cpp weapon/supertux.h


#AM_CXXFLAGS = -pg @SDL_CFLAGS@ @LIBXMLPP_CFLAGS@ @PARAGUI_CFLAGS@ -DINSTALL_DATADIR=\"$(pkgdatadir)\" -DINSTALL_LOCALEDIR=\"$(localedir)\"
#LIBS = $(SDL_LIBS) $(LIBXMLPP_LIBS) $(PARAGUI_LIBS)
AM_CXXFLAGS = -DINSTALL_DATADIR=\"$(pkgdatadir)\" -DINSTALL_LOCALEDIR=\"$(localedir)\"
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
wormux$(EXEEXT): $(wormux_OBJECTS) $(wormux_DEPENDENCIES) 
	@rm -f wormux$(EXEEXT)
	$(CXXLINK) $(wormux_LDFLAGS) $(wormux_OBJECTS) $(wormux_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/action_handler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/air_attack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/airhammer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auto_bazooka.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/baseball.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bazooka.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonus_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/button_text.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/camera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/character.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cluster_bomb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/constant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crosshair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/effects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_tools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_msg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grenade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ground.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gun.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/holly_grenade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i18n.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/infos_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jetpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jukebox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/label.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lowgrav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maps_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/math_tools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/move.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ninja_rope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/null_widget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objects_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parachute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/particle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/physical_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/physics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progress_bar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/question.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resource_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/skin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/skip_turn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sky.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spin_button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sprite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string_tools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/suicide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/supertux.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/team.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/team_energy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teams_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teleportation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uzi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/water.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapon_cfg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapon_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapon_tools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapons_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xml_document.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

constant.o: include/constant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT constant.o -MD -MP -MF "$(DEPDIR)/constant.Tpo" -c -o constant.o `test -f 'include/constant.cpp' || echo '$(srcdir)/'`include/constant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/constant.Tpo" "$(DEPDIR)/constant.Po"; else rm -f "$(DEPDIR)/constant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/constant.cpp' object='constant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o constant.o `test -f 'include/constant.cpp' || echo '$(srcdir)/'`include/constant.cpp

constant.obj: include/constant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT constant.obj -MD -MP -MF "$(DEPDIR)/constant.Tpo" -c -o constant.obj `if test -f 'include/constant.cpp'; then $(CYGPATH_W) 'include/constant.cpp'; else $(CYGPATH_W) '$(srcdir)/include/constant.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/constant.Tpo" "$(DEPDIR)/constant.Po"; else rm -f "$(DEPDIR)/constant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/constant.cpp' object='constant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o constant.obj `if test -f 'include/constant.cpp'; then $(CYGPATH_W) 'include/constant.cpp'; else $(CYGPATH_W) '$(srcdir)/include/constant.cpp'; fi`

global.o: include/global.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT global.o -MD -MP -MF "$(DEPDIR)/global.Tpo" -c -o global.o `test -f 'include/global.cpp' || echo '$(srcdir)/'`include/global.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/global.Tpo" "$(DEPDIR)/global.Po"; else rm -f "$(DEPDIR)/global.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/global.cpp' object='global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o global.o `test -f 'include/global.cpp' || echo '$(srcdir)/'`include/global.cpp

global.obj: include/global.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT global.obj -MD -MP -MF "$(DEPDIR)/global.Tpo" -c -o global.obj `if test -f 'include/global.cpp'; then $(CYGPATH_W) 'include/global.cpp'; else $(CYGPATH_W) '$(srcdir)/include/global.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/global.Tpo" "$(DEPDIR)/global.Po"; else rm -f "$(DEPDIR)/global.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/global.cpp' object='global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o global.obj `if test -f 'include/global.cpp'; then $(CYGPATH_W) 'include/global.cpp'; else $(CYGPATH_W) '$(srcdir)/include/global.cpp'; fi`

action.o: include/action.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action.o -MD -MP -MF "$(DEPDIR)/action.Tpo" -c -o action.o `test -f 'include/action.cpp' || echo '$(srcdir)/'`include/action.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/action.Tpo" "$(DEPDIR)/action.Po"; else rm -f "$(DEPDIR)/action.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/action.cpp' object='action.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action.o `test -f 'include/action.cpp' || echo '$(srcdir)/'`include/action.cpp

action.obj: include/action.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action.obj -MD -MP -MF "$(DEPDIR)/action.Tpo" -c -o action.obj `if test -f 'include/action.cpp'; then $(CYGPATH_W) 'include/action.cpp'; else $(CYGPATH_W) '$(srcdir)/include/action.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/action.Tpo" "$(DEPDIR)/action.Po"; else rm -f "$(DEPDIR)/action.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/action.cpp' object='action.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action.obj `if test -f 'include/action.cpp'; then $(CYGPATH_W) 'include/action.cpp'; else $(CYGPATH_W) '$(srcdir)/include/action.cpp'; fi`

action_handler.o: include/action_handler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_handler.o -MD -MP -MF "$(DEPDIR)/action_handler.Tpo" -c -o action_handler.o `test -f 'include/action_handler.cpp' || echo '$(srcdir)/'`include/action_handler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/action_handler.Tpo" "$(DEPDIR)/action_handler.Po"; else rm -f "$(DEPDIR)/action_handler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/action_handler.cpp' object='action_handler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_handler.o `test -f 'include/action_handler.cpp' || echo '$(srcdir)/'`include/action_handler.cpp

action_handler.obj: include/action_handler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_handler.obj -MD -MP -MF "$(DEPDIR)/action_handler.Tpo" -c -o action_handler.obj `if test -f 'include/action_handler.cpp'; then $(CYGPATH_W) 'include/action_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/include/action_handler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/action_handler.Tpo" "$(DEPDIR)/action_handler.Po"; else rm -f "$(DEPDIR)/action_handler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='include/action_handler.cpp' object='action_handler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_handler.obj `if test -f 'include/action_handler.cpp'; then $(CYGPATH_W) 'include/action_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/include/action_handler.cpp'; fi`

config.o: game/config.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT config.o -MD -MP -MF "$(DEPDIR)/config.Tpo" -c -o config.o `test -f 'game/config.cpp' || echo '$(srcdir)/'`game/config.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/config.Tpo" "$(DEPDIR)/config.Po"; else rm -f "$(DEPDIR)/config.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/config.cpp' object='config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o config.o `test -f 'game/config.cpp' || echo '$(srcdir)/'`game/config.cpp

config.obj: game/config.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT config.obj -MD -MP -MF "$(DEPDIR)/config.Tpo" -c -o config.obj `if test -f 'game/config.cpp'; then $(CYGPATH_W) 'game/config.cpp'; else $(CYGPATH_W) '$(srcdir)/game/config.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/config.Tpo" "$(DEPDIR)/config.Po"; else rm -f "$(DEPDIR)/config.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/config.cpp' object='config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o config.obj `if test -f 'game/config.cpp'; then $(CYGPATH_W) 'game/config.cpp'; else $(CYGPATH_W) '$(srcdir)/game/config.cpp'; fi`

game_mode.o: game/game_mode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_mode.o -MD -MP -MF "$(DEPDIR)/game_mode.Tpo" -c -o game_mode.o `test -f 'game/game_mode.cpp' || echo '$(srcdir)/'`game/game_mode.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_mode.Tpo" "$(DEPDIR)/game_mode.Po"; else rm -f "$(DEPDIR)/game_mode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game_mode.cpp' object='game_mode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_mode.o `test -f 'game/game_mode.cpp' || echo '$(srcdir)/'`game/game_mode.cpp

game_mode.obj: game/game_mode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_mode.obj -MD -MP -MF "$(DEPDIR)/game_mode.Tpo" -c -o game_mode.obj `if test -f 'game/game_mode.cpp'; then $(CYGPATH_W) 'game/game_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game_mode.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_mode.Tpo" "$(DEPDIR)/game_mode.Po"; else rm -f "$(DEPDIR)/game_mode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game_mode.cpp' object='game_mode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_mode.obj `if test -f 'game/game_mode.cpp'; then $(CYGPATH_W) 'game/game_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game_mode.cpp'; fi`

game.o: game/game.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game.o -MD -MP -MF "$(DEPDIR)/game.Tpo" -c -o game.o `test -f 'game/game.cpp' || echo '$(srcdir)/'`game/game.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game.Tpo" "$(DEPDIR)/game.Po"; else rm -f "$(DEPDIR)/game.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game.cpp' object='game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game.o `test -f 'game/game.cpp' || echo '$(srcdir)/'`game/game.cpp

game.obj: game/game.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game.obj -MD -MP -MF "$(DEPDIR)/game.Tpo" -c -o game.obj `if test -f 'game/game.cpp'; then $(CYGPATH_W) 'game/game.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game.Tpo" "$(DEPDIR)/game.Po"; else rm -f "$(DEPDIR)/game.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game.cpp' object='game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game.obj `if test -f 'game/game.cpp'; then $(CYGPATH_W) 'game/game.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game.cpp'; fi`

game_loop.o: game/game_loop.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_loop.o -MD -MP -MF "$(DEPDIR)/game_loop.Tpo" -c -o game_loop.o `test -f 'game/game_loop.cpp' || echo '$(srcdir)/'`game/game_loop.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_loop.Tpo" "$(DEPDIR)/game_loop.Po"; else rm -f "$(DEPDIR)/game_loop.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game_loop.cpp' object='game_loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_loop.o `test -f 'game/game_loop.cpp' || echo '$(srcdir)/'`game/game_loop.cpp

game_loop.obj: game/game_loop.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_loop.obj -MD -MP -MF "$(DEPDIR)/game_loop.Tpo" -c -o game_loop.obj `if test -f 'game/game_loop.cpp'; then $(CYGPATH_W) 'game/game_loop.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game_loop.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_loop.Tpo" "$(DEPDIR)/game_loop.Po"; else rm -f "$(DEPDIR)/game_loop.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/game_loop.cpp' object='game_loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_loop.obj `if test -f 'game/game_loop.cpp'; then $(CYGPATH_W) 'game/game_loop.cpp'; else $(CYGPATH_W) '$(srcdir)/game/game_loop.cpp'; fi`

fps.o: graphic/fps.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fps.o -MD -MP -MF "$(DEPDIR)/fps.Tpo" -c -o fps.o `test -f 'graphic/fps.cpp' || echo '$(srcdir)/'`graphic/fps.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/fps.Tpo" "$(DEPDIR)/fps.Po"; else rm -f "$(DEPDIR)/fps.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/fps.cpp' object='fps.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fps.o `test -f 'graphic/fps.cpp' || echo '$(srcdir)/'`graphic/fps.cpp

fps.obj: graphic/fps.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fps.obj -MD -MP -MF "$(DEPDIR)/fps.Tpo" -c -o fps.obj `if test -f 'graphic/fps.cpp'; then $(CYGPATH_W) 'graphic/fps.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/fps.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/fps.Tpo" "$(DEPDIR)/fps.Po"; else rm -f "$(DEPDIR)/fps.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/fps.cpp' object='fps.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fps.obj `if test -f 'graphic/fps.cpp'; then $(CYGPATH_W) 'graphic/fps.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/fps.cpp'; fi`

video.o: graphic/video.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT video.o -MD -MP -MF "$(DEPDIR)/video.Tpo" -c -o video.o `test -f 'graphic/video.cpp' || echo '$(srcdir)/'`graphic/video.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/video.Tpo" "$(DEPDIR)/video.Po"; else rm -f "$(DEPDIR)/video.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/video.cpp' object='video.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o video.o `test -f 'graphic/video.cpp' || echo '$(srcdir)/'`graphic/video.cpp

video.obj: graphic/video.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT video.obj -MD -MP -MF "$(DEPDIR)/video.Tpo" -c -o video.obj `if test -f 'graphic/video.cpp'; then $(CYGPATH_W) 'graphic/video.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/video.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/video.Tpo" "$(DEPDIR)/video.Po"; else rm -f "$(DEPDIR)/video.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/video.cpp' object='video.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o video.obj `if test -f 'graphic/video.cpp'; then $(CYGPATH_W) 'graphic/video.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/video.cpp'; fi`

text.o: graphic/text.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT text.o -MD -MP -MF "$(DEPDIR)/text.Tpo" -c -o text.o `test -f 'graphic/text.cpp' || echo '$(srcdir)/'`graphic/text.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/text.Tpo" "$(DEPDIR)/text.Po"; else rm -f "$(DEPDIR)/text.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/text.cpp' object='text.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o text.o `test -f 'graphic/text.cpp' || echo '$(srcdir)/'`graphic/text.cpp

text.obj: graphic/text.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT text.obj -MD -MP -MF "$(DEPDIR)/text.Tpo" -c -o text.obj `if test -f 'graphic/text.cpp'; then $(CYGPATH_W) 'graphic/text.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/text.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/text.Tpo" "$(DEPDIR)/text.Po"; else rm -f "$(DEPDIR)/text.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/text.cpp' object='text.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o text.obj `if test -f 'graphic/text.cpp'; then $(CYGPATH_W) 'graphic/text.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/text.cpp'; fi`

effects.o: graphic/effects.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT effects.o -MD -MP -MF "$(DEPDIR)/effects.Tpo" -c -o effects.o `test -f 'graphic/effects.cpp' || echo '$(srcdir)/'`graphic/effects.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/effects.Tpo" "$(DEPDIR)/effects.Po"; else rm -f "$(DEPDIR)/effects.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/effects.cpp' object='effects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o effects.o `test -f 'graphic/effects.cpp' || echo '$(srcdir)/'`graphic/effects.cpp

effects.obj: graphic/effects.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT effects.obj -MD -MP -MF "$(DEPDIR)/effects.Tpo" -c -o effects.obj `if test -f 'graphic/effects.cpp'; then $(CYGPATH_W) 'graphic/effects.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/effects.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/effects.Tpo" "$(DEPDIR)/effects.Po"; else rm -f "$(DEPDIR)/effects.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/effects.cpp' object='effects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o effects.obj `if test -f 'graphic/effects.cpp'; then $(CYGPATH_W) 'graphic/effects.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/effects.cpp'; fi`

button.o: gui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button.o -MD -MP -MF "$(DEPDIR)/button.Tpo" -c -o button.o `test -f 'gui/button.cpp' || echo '$(srcdir)/'`gui/button.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/button.Tpo" "$(DEPDIR)/button.Po"; else rm -f "$(DEPDIR)/button.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/button.cpp' object='button.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button.o `test -f 'gui/button.cpp' || echo '$(srcdir)/'`gui/button.cpp

button.obj: gui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button.obj -MD -MP -MF "$(DEPDIR)/button.Tpo" -c -o button.obj `if test -f 'gui/button.cpp'; then $(CYGPATH_W) 'gui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/button.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/button.Tpo" "$(DEPDIR)/button.Po"; else rm -f "$(DEPDIR)/button.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/button.cpp' object='button.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button.obj `if test -f 'gui/button.cpp'; then $(CYGPATH_W) 'gui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/button.cpp'; fi`

button_text.o: gui/button_text.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button_text.o -MD -MP -MF "$(DEPDIR)/button_text.Tpo" -c -o button_text.o `test -f 'gui/button_text.cpp' || echo '$(srcdir)/'`gui/button_text.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/button_text.Tpo" "$(DEPDIR)/button_text.Po"; else rm -f "$(DEPDIR)/button_text.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/button_text.cpp' object='button_text.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button_text.o `test -f 'gui/button_text.cpp' || echo '$(srcdir)/'`gui/button_text.cpp

button_text.obj: gui/button_text.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button_text.obj -MD -MP -MF "$(DEPDIR)/button_text.Tpo" -c -o button_text.obj `if test -f 'gui/button_text.cpp'; then $(CYGPATH_W) 'gui/button_text.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/button_text.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/button_text.Tpo" "$(DEPDIR)/button_text.Po"; else rm -f "$(DEPDIR)/button_text.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/button_text.cpp' object='button_text.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button_text.obj `if test -f 'gui/button_text.cpp'; then $(CYGPATH_W) 'gui/button_text.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/button_text.cpp'; fi`

check_box.o: gui/check_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_box.o -MD -MP -MF "$(DEPDIR)/check_box.Tpo" -c -o check_box.o `test -f 'gui/check_box.cpp' || echo '$(srcdir)/'`gui/check_box.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/check_box.Tpo" "$(DEPDIR)/check_box.Po"; else rm -f "$(DEPDIR)/check_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/check_box.cpp' object='check_box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_box.o `test -f 'gui/check_box.cpp' || echo '$(srcdir)/'`gui/check_box.cpp

check_box.obj: gui/check_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_box.obj -MD -MP -MF "$(DEPDIR)/check_box.Tpo" -c -o check_box.obj `if test -f 'gui/check_box.cpp'; then $(CYGPATH_W) 'gui/check_box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/check_box.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/check_box.Tpo" "$(DEPDIR)/check_box.Po"; else rm -f "$(DEPDIR)/check_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/check_box.cpp' object='check_box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_box.obj `if test -f 'gui/check_box.cpp'; then $(CYGPATH_W) 'gui/check_box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/check_box.cpp'; fi`

label.o: gui/label.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT label.o -MD -MP -MF "$(DEPDIR)/label.Tpo" -c -o label.o `test -f 'gui/label.cpp' || echo '$(srcdir)/'`gui/label.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/label.Tpo" "$(DEPDIR)/label.Po"; else rm -f "$(DEPDIR)/label.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/label.cpp' object='label.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o label.o `test -f 'gui/label.cpp' || echo '$(srcdir)/'`gui/label.cpp

label.obj: gui/label.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT label.obj -MD -MP -MF "$(DEPDIR)/label.Tpo" -c -o label.obj `if test -f 'gui/label.cpp'; then $(CYGPATH_W) 'gui/label.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/label.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/label.Tpo" "$(DEPDIR)/label.Po"; else rm -f "$(DEPDIR)/label.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/label.cpp' object='label.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o label.obj `if test -f 'gui/label.cpp'; then $(CYGPATH_W) 'gui/label.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/label.cpp'; fi`

list_box.o: gui/list_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT list_box.o -MD -MP -MF "$(DEPDIR)/list_box.Tpo" -c -o list_box.o `test -f 'gui/list_box.cpp' || echo '$(srcdir)/'`gui/list_box.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/list_box.Tpo" "$(DEPDIR)/list_box.Po"; else rm -f "$(DEPDIR)/list_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/list_box.cpp' object='list_box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o list_box.o `test -f 'gui/list_box.cpp' || echo '$(srcdir)/'`gui/list_box.cpp

list_box.obj: gui/list_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT list_box.obj -MD -MP -MF "$(DEPDIR)/list_box.Tpo" -c -o list_box.obj `if test -f 'gui/list_box.cpp'; then $(CYGPATH_W) 'gui/list_box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/list_box.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/list_box.Tpo" "$(DEPDIR)/list_box.Po"; else rm -f "$(DEPDIR)/list_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/list_box.cpp' object='list_box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o list_box.obj `if test -f 'gui/list_box.cpp'; then $(CYGPATH_W) 'gui/list_box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/list_box.cpp'; fi`

spin_button.o: gui/spin_button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spin_button.o -MD -MP -MF "$(DEPDIR)/spin_button.Tpo" -c -o spin_button.o `test -f 'gui/spin_button.cpp' || echo '$(srcdir)/'`gui/spin_button.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spin_button.Tpo" "$(DEPDIR)/spin_button.Po"; else rm -f "$(DEPDIR)/spin_button.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/spin_button.cpp' object='spin_button.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spin_button.o `test -f 'gui/spin_button.cpp' || echo '$(srcdir)/'`gui/spin_button.cpp

spin_button.obj: gui/spin_button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spin_button.obj -MD -MP -MF "$(DEPDIR)/spin_button.Tpo" -c -o spin_button.obj `if test -f 'gui/spin_button.cpp'; then $(CYGPATH_W) 'gui/spin_button.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/spin_button.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spin_button.Tpo" "$(DEPDIR)/spin_button.Po"; else rm -f "$(DEPDIR)/spin_button.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/spin_button.cpp' object='spin_button.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spin_button.obj `if test -f 'gui/spin_button.cpp'; then $(CYGPATH_W) 'gui/spin_button.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/spin_button.cpp'; fi`

box.o: gui/box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT box.o -MD -MP -MF "$(DEPDIR)/box.Tpo" -c -o box.o `test -f 'gui/box.cpp' || echo '$(srcdir)/'`gui/box.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/box.Tpo" "$(DEPDIR)/box.Po"; else rm -f "$(DEPDIR)/box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/box.cpp' object='box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o box.o `test -f 'gui/box.cpp' || echo '$(srcdir)/'`gui/box.cpp

box.obj: gui/box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT box.obj -MD -MP -MF "$(DEPDIR)/box.Tpo" -c -o box.obj `if test -f 'gui/box.cpp'; then $(CYGPATH_W) 'gui/box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/box.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/box.Tpo" "$(DEPDIR)/box.Po"; else rm -f "$(DEPDIR)/box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/box.cpp' object='box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o box.obj `if test -f 'gui/box.cpp'; then $(CYGPATH_W) 'gui/box.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/box.cpp'; fi`

widget.o: gui/widget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT widget.o -MD -MP -MF "$(DEPDIR)/widget.Tpo" -c -o widget.o `test -f 'gui/widget.cpp' || echo '$(srcdir)/'`gui/widget.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/widget.Tpo" "$(DEPDIR)/widget.Po"; else rm -f "$(DEPDIR)/widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/widget.cpp' object='widget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o widget.o `test -f 'gui/widget.cpp' || echo '$(srcdir)/'`gui/widget.cpp

widget.obj: gui/widget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT widget.obj -MD -MP -MF "$(DEPDIR)/widget.Tpo" -c -o widget.obj `if test -f 'gui/widget.cpp'; then $(CYGPATH_W) 'gui/widget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/widget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/widget.Tpo" "$(DEPDIR)/widget.Po"; else rm -f "$(DEPDIR)/widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/widget.cpp' object='widget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o widget.obj `if test -f 'gui/widget.cpp'; then $(CYGPATH_W) 'gui/widget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/widget.cpp'; fi`

null_widget.o: gui/null_widget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT null_widget.o -MD -MP -MF "$(DEPDIR)/null_widget.Tpo" -c -o null_widget.o `test -f 'gui/null_widget.cpp' || echo '$(srcdir)/'`gui/null_widget.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/null_widget.Tpo" "$(DEPDIR)/null_widget.Po"; else rm -f "$(DEPDIR)/null_widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/null_widget.cpp' object='null_widget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o null_widget.o `test -f 'gui/null_widget.cpp' || echo '$(srcdir)/'`gui/null_widget.cpp

null_widget.obj: gui/null_widget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT null_widget.obj -MD -MP -MF "$(DEPDIR)/null_widget.Tpo" -c -o null_widget.obj `if test -f 'gui/null_widget.cpp'; then $(CYGPATH_W) 'gui/null_widget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/null_widget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/null_widget.Tpo" "$(DEPDIR)/null_widget.Po"; else rm -f "$(DEPDIR)/null_widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/null_widget.cpp' object='null_widget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o null_widget.obj `if test -f 'gui/null_widget.cpp'; then $(CYGPATH_W) 'gui/null_widget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/null_widget.cpp'; fi`

string_tools.o: tool/string_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string_tools.o -MD -MP -MF "$(DEPDIR)/string_tools.Tpo" -c -o string_tools.o `test -f 'tool/string_tools.cpp' || echo '$(srcdir)/'`tool/string_tools.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/string_tools.Tpo" "$(DEPDIR)/string_tools.Po"; else rm -f "$(DEPDIR)/string_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/string_tools.cpp' object='string_tools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string_tools.o `test -f 'tool/string_tools.cpp' || echo '$(srcdir)/'`tool/string_tools.cpp

string_tools.obj: tool/string_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string_tools.obj -MD -MP -MF "$(DEPDIR)/string_tools.Tpo" -c -o string_tools.obj `if test -f 'tool/string_tools.cpp'; then $(CYGPATH_W) 'tool/string_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/string_tools.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/string_tools.Tpo" "$(DEPDIR)/string_tools.Po"; else rm -f "$(DEPDIR)/string_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/string_tools.cpp' object='string_tools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string_tools.obj `if test -f 'tool/string_tools.cpp'; then $(CYGPATH_W) 'tool/string_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/string_tools.cpp'; fi`

xml_document.o: tool/xml_document.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xml_document.o -MD -MP -MF "$(DEPDIR)/xml_document.Tpo" -c -o xml_document.o `test -f 'tool/xml_document.cpp' || echo '$(srcdir)/'`tool/xml_document.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/xml_document.Tpo" "$(DEPDIR)/xml_document.Po"; else rm -f "$(DEPDIR)/xml_document.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/xml_document.cpp' object='xml_document.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xml_document.o `test -f 'tool/xml_document.cpp' || echo '$(srcdir)/'`tool/xml_document.cpp

xml_document.obj: tool/xml_document.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xml_document.obj -MD -MP -MF "$(DEPDIR)/xml_document.Tpo" -c -o xml_document.obj `if test -f 'tool/xml_document.cpp'; then $(CYGPATH_W) 'tool/xml_document.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/xml_document.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/xml_document.Tpo" "$(DEPDIR)/xml_document.Po"; else rm -f "$(DEPDIR)/xml_document.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/xml_document.cpp' object='xml_document.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xml_document.obj `if test -f 'tool/xml_document.cpp'; then $(CYGPATH_W) 'tool/xml_document.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/xml_document.cpp'; fi`

i18n.o: tool/i18n.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i18n.o -MD -MP -MF "$(DEPDIR)/i18n.Tpo" -c -o i18n.o `test -f 'tool/i18n.cpp' || echo '$(srcdir)/'`tool/i18n.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/i18n.Tpo" "$(DEPDIR)/i18n.Po"; else rm -f "$(DEPDIR)/i18n.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/i18n.cpp' object='i18n.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i18n.o `test -f 'tool/i18n.cpp' || echo '$(srcdir)/'`tool/i18n.cpp

i18n.obj: tool/i18n.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i18n.obj -MD -MP -MF "$(DEPDIR)/i18n.Tpo" -c -o i18n.obj `if test -f 'tool/i18n.cpp'; then $(CYGPATH_W) 'tool/i18n.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/i18n.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/i18n.Tpo" "$(DEPDIR)/i18n.Po"; else rm -f "$(DEPDIR)/i18n.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/i18n.cpp' object='i18n.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i18n.obj `if test -f 'tool/i18n.cpp'; then $(CYGPATH_W) 'tool/i18n.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/i18n.cpp'; fi`

error.o: tool/error.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.o -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.o `test -f 'tool/error.cpp' || echo '$(srcdir)/'`tool/error.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Po"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/error.cpp' object='error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.o `test -f 'tool/error.cpp' || echo '$(srcdir)/'`tool/error.cpp

error.obj: tool/error.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.obj -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.obj `if test -f 'tool/error.cpp'; then $(CYGPATH_W) 'tool/error.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/error.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Po"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/error.cpp' object='error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.obj `if test -f 'tool/error.cpp'; then $(CYGPATH_W) 'tool/error.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/error.cpp'; fi`

file_tools.o: tool/file_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file_tools.o -MD -MP -MF "$(DEPDIR)/file_tools.Tpo" -c -o file_tools.o `test -f 'tool/file_tools.cpp' || echo '$(srcdir)/'`tool/file_tools.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/file_tools.Tpo" "$(DEPDIR)/file_tools.Po"; else rm -f "$(DEPDIR)/file_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/file_tools.cpp' object='file_tools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file_tools.o `test -f 'tool/file_tools.cpp' || echo '$(srcdir)/'`tool/file_tools.cpp

file_tools.obj: tool/file_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file_tools.obj -MD -MP -MF "$(DEPDIR)/file_tools.Tpo" -c -o file_tools.obj `if test -f 'tool/file_tools.cpp'; then $(CYGPATH_W) 'tool/file_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/file_tools.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/file_tools.Tpo" "$(DEPDIR)/file_tools.Po"; else rm -f "$(DEPDIR)/file_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/file_tools.cpp' object='file_tools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file_tools.obj `if test -f 'tool/file_tools.cpp'; then $(CYGPATH_W) 'tool/file_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/file_tools.cpp'; fi`

math_tools.o: tool/math_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT math_tools.o -MD -MP -MF "$(DEPDIR)/math_tools.Tpo" -c -o math_tools.o `test -f 'tool/math_tools.cpp' || echo '$(srcdir)/'`tool/math_tools.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/math_tools.Tpo" "$(DEPDIR)/math_tools.Po"; else rm -f "$(DEPDIR)/math_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/math_tools.cpp' object='math_tools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o math_tools.o `test -f 'tool/math_tools.cpp' || echo '$(srcdir)/'`tool/math_tools.cpp

math_tools.obj: tool/math_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT math_tools.obj -MD -MP -MF "$(DEPDIR)/math_tools.Tpo" -c -o math_tools.obj `if test -f 'tool/math_tools.cpp'; then $(CYGPATH_W) 'tool/math_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/math_tools.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/math_tools.Tpo" "$(DEPDIR)/math_tools.Po"; else rm -f "$(DEPDIR)/math_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/math_tools.cpp' object='math_tools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o math_tools.obj `if test -f 'tool/math_tools.cpp'; then $(CYGPATH_W) 'tool/math_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/math_tools.cpp'; fi`

resource_manager.o: tool/resource_manager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resource_manager.o -MD -MP -MF "$(DEPDIR)/resource_manager.Tpo" -c -o resource_manager.o `test -f 'tool/resource_manager.cpp' || echo '$(srcdir)/'`tool/resource_manager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/resource_manager.Tpo" "$(DEPDIR)/resource_manager.Po"; else rm -f "$(DEPDIR)/resource_manager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/resource_manager.cpp' object='resource_manager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resource_manager.o `test -f 'tool/resource_manager.cpp' || echo '$(srcdir)/'`tool/resource_manager.cpp

resource_manager.obj: tool/resource_manager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resource_manager.obj -MD -MP -MF "$(DEPDIR)/resource_manager.Tpo" -c -o resource_manager.obj `if test -f 'tool/resource_manager.cpp'; then $(CYGPATH_W) 'tool/resource_manager.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/resource_manager.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/resource_manager.Tpo" "$(DEPDIR)/resource_manager.Po"; else rm -f "$(DEPDIR)/resource_manager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/resource_manager.cpp' object='resource_manager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resource_manager.obj `if test -f 'tool/resource_manager.cpp'; then $(CYGPATH_W) 'tool/resource_manager.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/resource_manager.cpp'; fi`

stats.o: tool/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats.o -MD -MP -MF "$(DEPDIR)/stats.Tpo" -c -o stats.o `test -f 'tool/stats.cpp' || echo '$(srcdir)/'`tool/stats.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/stats.Tpo" "$(DEPDIR)/stats.Po"; else rm -f "$(DEPDIR)/stats.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/stats.cpp' object='stats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats.o `test -f 'tool/stats.cpp' || echo '$(srcdir)/'`tool/stats.cpp

stats.obj: tool/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats.obj -MD -MP -MF "$(DEPDIR)/stats.Tpo" -c -o stats.obj `if test -f 'tool/stats.cpp'; then $(CYGPATH_W) 'tool/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/stats.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/stats.Tpo" "$(DEPDIR)/stats.Po"; else rm -f "$(DEPDIR)/stats.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/stats.cpp' object='stats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats.obj `if test -f 'tool/stats.cpp'; then $(CYGPATH_W) 'tool/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/stats.cpp'; fi`

random.o: tool/random.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.o -MD -MP -MF "$(DEPDIR)/random.Tpo" -c -o random.o `test -f 'tool/random.cpp' || echo '$(srcdir)/'`tool/random.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/random.Tpo" "$(DEPDIR)/random.Po"; else rm -f "$(DEPDIR)/random.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/random.cpp' object='random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.o `test -f 'tool/random.cpp' || echo '$(srcdir)/'`tool/random.cpp

random.obj: tool/random.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.obj -MD -MP -MF "$(DEPDIR)/random.Tpo" -c -o random.obj `if test -f 'tool/random.cpp'; then $(CYGPATH_W) 'tool/random.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/random.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/random.Tpo" "$(DEPDIR)/random.Po"; else rm -f "$(DEPDIR)/random.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/random.cpp' object='random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.obj `if test -f 'tool/random.cpp'; then $(CYGPATH_W) 'tool/random.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/random.cpp'; fi`

debug.o: tool/debug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.o -MD -MP -MF "$(DEPDIR)/debug.Tpo" -c -o debug.o `test -f 'tool/debug.cpp' || echo '$(srcdir)/'`tool/debug.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/debug.Tpo" "$(DEPDIR)/debug.Po"; else rm -f "$(DEPDIR)/debug.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/debug.cpp' object='debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.o `test -f 'tool/debug.cpp' || echo '$(srcdir)/'`tool/debug.cpp

debug.obj: tool/debug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.obj -MD -MP -MF "$(DEPDIR)/debug.Tpo" -c -o debug.obj `if test -f 'tool/debug.cpp'; then $(CYGPATH_W) 'tool/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/debug.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/debug.Tpo" "$(DEPDIR)/debug.Po"; else rm -f "$(DEPDIR)/debug.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tool/debug.cpp' object='debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.obj `if test -f 'tool/debug.cpp'; then $(CYGPATH_W) 'tool/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/tool/debug.cpp'; fi`

jukebox.o: sound/jukebox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jukebox.o -MD -MP -MF "$(DEPDIR)/jukebox.Tpo" -c -o jukebox.o `test -f 'sound/jukebox.cpp' || echo '$(srcdir)/'`sound/jukebox.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jukebox.Tpo" "$(DEPDIR)/jukebox.Po"; else rm -f "$(DEPDIR)/jukebox.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/jukebox.cpp' object='jukebox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jukebox.o `test -f 'sound/jukebox.cpp' || echo '$(srcdir)/'`sound/jukebox.cpp

jukebox.obj: sound/jukebox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jukebox.obj -MD -MP -MF "$(DEPDIR)/jukebox.Tpo" -c -o jukebox.obj `if test -f 'sound/jukebox.cpp'; then $(CYGPATH_W) 'sound/jukebox.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/jukebox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jukebox.Tpo" "$(DEPDIR)/jukebox.Po"; else rm -f "$(DEPDIR)/jukebox.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/jukebox.cpp' object='jukebox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jukebox.obj `if test -f 'sound/jukebox.cpp'; then $(CYGPATH_W) 'sound/jukebox.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/jukebox.cpp'; fi`

font.o: graphic/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.o -MD -MP -MF "$(DEPDIR)/font.Tpo" -c -o font.o `test -f 'graphic/font.cpp' || echo '$(srcdir)/'`graphic/font.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; else rm -f "$(DEPDIR)/font.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/font.cpp' object='font.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.o `test -f 'graphic/font.cpp' || echo '$(srcdir)/'`graphic/font.cpp

font.obj: graphic/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.obj -MD -MP -MF "$(DEPDIR)/font.Tpo" -c -o font.obj `if test -f 'graphic/font.cpp'; then $(CYGPATH_W) 'graphic/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/font.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; else rm -f "$(DEPDIR)/font.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/font.cpp' object='font.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.obj `if test -f 'graphic/font.cpp'; then $(CYGPATH_W) 'graphic/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/font.cpp'; fi`

sprite.o: graphic/sprite.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sprite.o -MD -MP -MF "$(DEPDIR)/sprite.Tpo" -c -o sprite.o `test -f 'graphic/sprite.cpp' || echo '$(srcdir)/'`graphic/sprite.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sprite.Tpo" "$(DEPDIR)/sprite.Po"; else rm -f "$(DEPDIR)/sprite.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/sprite.cpp' object='sprite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sprite.o `test -f 'graphic/sprite.cpp' || echo '$(srcdir)/'`graphic/sprite.cpp

sprite.obj: graphic/sprite.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sprite.obj -MD -MP -MF "$(DEPDIR)/sprite.Tpo" -c -o sprite.obj `if test -f 'graphic/sprite.cpp'; then $(CYGPATH_W) 'graphic/sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/sprite.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sprite.Tpo" "$(DEPDIR)/sprite.Po"; else rm -f "$(DEPDIR)/sprite.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphic/sprite.cpp' object='sprite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sprite.obj `if test -f 'graphic/sprite.cpp'; then $(CYGPATH_W) 'graphic/sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/graphic/sprite.cpp'; fi`

weapon_menu.o: interface/weapon_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_menu.o -MD -MP -MF "$(DEPDIR)/weapon_menu.Tpo" -c -o weapon_menu.o `test -f 'interface/weapon_menu.cpp' || echo '$(srcdir)/'`interface/weapon_menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_menu.Tpo" "$(DEPDIR)/weapon_menu.Po"; else rm -f "$(DEPDIR)/weapon_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/weapon_menu.cpp' object='weapon_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_menu.o `test -f 'interface/weapon_menu.cpp' || echo '$(srcdir)/'`interface/weapon_menu.cpp

weapon_menu.obj: interface/weapon_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_menu.obj -MD -MP -MF "$(DEPDIR)/weapon_menu.Tpo" -c -o weapon_menu.obj `if test -f 'interface/weapon_menu.cpp'; then $(CYGPATH_W) 'interface/weapon_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/weapon_menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_menu.Tpo" "$(DEPDIR)/weapon_menu.Po"; else rm -f "$(DEPDIR)/weapon_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/weapon_menu.cpp' object='weapon_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_menu.obj `if test -f 'interface/weapon_menu.cpp'; then $(CYGPATH_W) 'interface/weapon_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/weapon_menu.cpp'; fi`

main_menu.o: menu/main_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main_menu.o -MD -MP -MF "$(DEPDIR)/main_menu.Tpo" -c -o main_menu.o `test -f 'menu/main_menu.cpp' || echo '$(srcdir)/'`menu/main_menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/main_menu.Tpo" "$(DEPDIR)/main_menu.Po"; else rm -f "$(DEPDIR)/main_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/main_menu.cpp' object='main_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main_menu.o `test -f 'menu/main_menu.cpp' || echo '$(srcdir)/'`menu/main_menu.cpp

main_menu.obj: menu/main_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main_menu.obj -MD -MP -MF "$(DEPDIR)/main_menu.Tpo" -c -o main_menu.obj `if test -f 'menu/main_menu.cpp'; then $(CYGPATH_W) 'menu/main_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/main_menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/main_menu.Tpo" "$(DEPDIR)/main_menu.Po"; else rm -f "$(DEPDIR)/main_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/main_menu.cpp' object='main_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main_menu.obj `if test -f 'menu/main_menu.cpp'; then $(CYGPATH_W) 'menu/main_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/main_menu.cpp'; fi`

menu.o: menu/menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT menu.o -MD -MP -MF "$(DEPDIR)/menu.Tpo" -c -o menu.o `test -f 'menu/menu.cpp' || echo '$(srcdir)/'`menu/menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/menu.Tpo" "$(DEPDIR)/menu.Po"; else rm -f "$(DEPDIR)/menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/menu.cpp' object='menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o menu.o `test -f 'menu/menu.cpp' || echo '$(srcdir)/'`menu/menu.cpp

menu.obj: menu/menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT menu.obj -MD -MP -MF "$(DEPDIR)/menu.Tpo" -c -o menu.obj `if test -f 'menu/menu.cpp'; then $(CYGPATH_W) 'menu/menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/menu.Tpo" "$(DEPDIR)/menu.Po"; else rm -f "$(DEPDIR)/menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/menu.cpp' object='menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o menu.obj `if test -f 'menu/menu.cpp'; then $(CYGPATH_W) 'menu/menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/menu.cpp'; fi`

infos_menu.o: menu/infos_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT infos_menu.o -MD -MP -MF "$(DEPDIR)/infos_menu.Tpo" -c -o infos_menu.o `test -f 'menu/infos_menu.cpp' || echo '$(srcdir)/'`menu/infos_menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/infos_menu.Tpo" "$(DEPDIR)/infos_menu.Po"; else rm -f "$(DEPDIR)/infos_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/infos_menu.cpp' object='infos_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o infos_menu.o `test -f 'menu/infos_menu.cpp' || echo '$(srcdir)/'`menu/infos_menu.cpp

infos_menu.obj: menu/infos_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT infos_menu.obj -MD -MP -MF "$(DEPDIR)/infos_menu.Tpo" -c -o infos_menu.obj `if test -f 'menu/infos_menu.cpp'; then $(CYGPATH_W) 'menu/infos_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/infos_menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/infos_menu.Tpo" "$(DEPDIR)/infos_menu.Po"; else rm -f "$(DEPDIR)/infos_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/infos_menu.cpp' object='infos_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o infos_menu.obj `if test -f 'menu/infos_menu.cpp'; then $(CYGPATH_W) 'menu/infos_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/infos_menu.cpp'; fi`

options_menu.o: menu/options_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT options_menu.o -MD -MP -MF "$(DEPDIR)/options_menu.Tpo" -c -o options_menu.o `test -f 'menu/options_menu.cpp' || echo '$(srcdir)/'`menu/options_menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/options_menu.Tpo" "$(DEPDIR)/options_menu.Po"; else rm -f "$(DEPDIR)/options_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/options_menu.cpp' object='options_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o options_menu.o `test -f 'menu/options_menu.cpp' || echo '$(srcdir)/'`menu/options_menu.cpp

options_menu.obj: menu/options_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT options_menu.obj -MD -MP -MF "$(DEPDIR)/options_menu.Tpo" -c -o options_menu.obj `if test -f 'menu/options_menu.cpp'; then $(CYGPATH_W) 'menu/options_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/options_menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/options_menu.Tpo" "$(DEPDIR)/options_menu.Po"; else rm -f "$(DEPDIR)/options_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/options_menu.cpp' object='options_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o options_menu.obj `if test -f 'menu/options_menu.cpp'; then $(CYGPATH_W) 'menu/options_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/options_menu.cpp'; fi`

game_menu.o: menu/game_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_menu.o -MD -MP -MF "$(DEPDIR)/game_menu.Tpo" -c -o game_menu.o `test -f 'menu/game_menu.cpp' || echo '$(srcdir)/'`menu/game_menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_menu.Tpo" "$(DEPDIR)/game_menu.Po"; else rm -f "$(DEPDIR)/game_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/game_menu.cpp' object='game_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_menu.o `test -f 'menu/game_menu.cpp' || echo '$(srcdir)/'`menu/game_menu.cpp

game_menu.obj: menu/game_menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_menu.obj -MD -MP -MF "$(DEPDIR)/game_menu.Tpo" -c -o game_menu.obj `if test -f 'menu/game_menu.cpp'; then $(CYGPATH_W) 'menu/game_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/game_menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_menu.Tpo" "$(DEPDIR)/game_menu.Po"; else rm -f "$(DEPDIR)/game_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu/game_menu.cpp' object='game_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_menu.obj `if test -f 'menu/game_menu.cpp'; then $(CYGPATH_W) 'menu/game_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu/game_menu.cpp'; fi`

time.o: game/time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT time.o -MD -MP -MF "$(DEPDIR)/time.Tpo" -c -o time.o `test -f 'game/time.cpp' || echo '$(srcdir)/'`game/time.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/time.Tpo" "$(DEPDIR)/time.Po"; else rm -f "$(DEPDIR)/time.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/time.cpp' object='time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o time.o `test -f 'game/time.cpp' || echo '$(srcdir)/'`game/time.cpp

time.obj: game/time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT time.obj -MD -MP -MF "$(DEPDIR)/time.Tpo" -c -o time.obj `if test -f 'game/time.cpp'; then $(CYGPATH_W) 'game/time.cpp'; else $(CYGPATH_W) '$(srcdir)/game/time.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/time.Tpo" "$(DEPDIR)/time.Po"; else rm -f "$(DEPDIR)/time.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game/time.cpp' object='time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o time.obj `if test -f 'game/time.cpp'; then $(CYGPATH_W) 'game/time.cpp'; else $(CYGPATH_W) '$(srcdir)/game/time.cpp'; fi`

progress_bar.o: gui/progress_bar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progress_bar.o -MD -MP -MF "$(DEPDIR)/progress_bar.Tpo" -c -o progress_bar.o `test -f 'gui/progress_bar.cpp' || echo '$(srcdir)/'`gui/progress_bar.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/progress_bar.Tpo" "$(DEPDIR)/progress_bar.Po"; else rm -f "$(DEPDIR)/progress_bar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/progress_bar.cpp' object='progress_bar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progress_bar.o `test -f 'gui/progress_bar.cpp' || echo '$(srcdir)/'`gui/progress_bar.cpp

progress_bar.obj: gui/progress_bar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progress_bar.obj -MD -MP -MF "$(DEPDIR)/progress_bar.Tpo" -c -o progress_bar.obj `if test -f 'gui/progress_bar.cpp'; then $(CYGPATH_W) 'gui/progress_bar.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/progress_bar.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/progress_bar.Tpo" "$(DEPDIR)/progress_bar.Po"; else rm -f "$(DEPDIR)/progress_bar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/progress_bar.cpp' object='progress_bar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progress_bar.obj `if test -f 'gui/progress_bar.cpp'; then $(CYGPATH_W) 'gui/progress_bar.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/progress_bar.cpp'; fi`

question.o: gui/question.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT question.o -MD -MP -MF "$(DEPDIR)/question.Tpo" -c -o question.o `test -f 'gui/question.cpp' || echo '$(srcdir)/'`gui/question.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/question.Tpo" "$(DEPDIR)/question.Po"; else rm -f "$(DEPDIR)/question.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/question.cpp' object='question.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o question.o `test -f 'gui/question.cpp' || echo '$(srcdir)/'`gui/question.cpp

question.obj: gui/question.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT question.obj -MD -MP -MF "$(DEPDIR)/question.Tpo" -c -o question.obj `if test -f 'gui/question.cpp'; then $(CYGPATH_W) 'gui/question.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/question.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/question.Tpo" "$(DEPDIR)/question.Po"; else rm -f "$(DEPDIR)/question.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/question.cpp' object='question.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o question.obj `if test -f 'gui/question.cpp'; then $(CYGPATH_W) 'gui/question.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/question.cpp'; fi`

interface.o: interface/interface.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT interface.o -MD -MP -MF "$(DEPDIR)/interface.Tpo" -c -o interface.o `test -f 'interface/interface.cpp' || echo '$(srcdir)/'`interface/interface.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/interface.Tpo" "$(DEPDIR)/interface.Po"; else rm -f "$(DEPDIR)/interface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/interface.cpp' object='interface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o interface.o `test -f 'interface/interface.cpp' || echo '$(srcdir)/'`interface/interface.cpp

interface.obj: interface/interface.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT interface.obj -MD -MP -MF "$(DEPDIR)/interface.Tpo" -c -o interface.obj `if test -f 'interface/interface.cpp'; then $(CYGPATH_W) 'interface/interface.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/interface.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/interface.Tpo" "$(DEPDIR)/interface.Po"; else rm -f "$(DEPDIR)/interface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/interface.cpp' object='interface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o interface.obj `if test -f 'interface/interface.cpp'; then $(CYGPATH_W) 'interface/interface.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/interface.cpp'; fi`

cursor.o: interface/cursor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cursor.o -MD -MP -MF "$(DEPDIR)/cursor.Tpo" -c -o cursor.o `test -f 'interface/cursor.cpp' || echo '$(srcdir)/'`interface/cursor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cursor.Tpo" "$(DEPDIR)/cursor.Po"; else rm -f "$(DEPDIR)/cursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/cursor.cpp' object='cursor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cursor.o `test -f 'interface/cursor.cpp' || echo '$(srcdir)/'`interface/cursor.cpp

cursor.obj: interface/cursor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cursor.obj -MD -MP -MF "$(DEPDIR)/cursor.Tpo" -c -o cursor.obj `if test -f 'interface/cursor.cpp'; then $(CYGPATH_W) 'interface/cursor.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/cursor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cursor.Tpo" "$(DEPDIR)/cursor.Po"; else rm -f "$(DEPDIR)/cursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/cursor.cpp' object='cursor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cursor.obj `if test -f 'interface/cursor.cpp'; then $(CYGPATH_W) 'interface/cursor.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/cursor.cpp'; fi`

game_msg.o: interface/game_msg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_msg.o -MD -MP -MF "$(DEPDIR)/game_msg.Tpo" -c -o game_msg.o `test -f 'interface/game_msg.cpp' || echo '$(srcdir)/'`interface/game_msg.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_msg.Tpo" "$(DEPDIR)/game_msg.Po"; else rm -f "$(DEPDIR)/game_msg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/game_msg.cpp' object='game_msg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_msg.o `test -f 'interface/game_msg.cpp' || echo '$(srcdir)/'`interface/game_msg.cpp

game_msg.obj: interface/game_msg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT game_msg.obj -MD -MP -MF "$(DEPDIR)/game_msg.Tpo" -c -o game_msg.obj `if test -f 'interface/game_msg.cpp'; then $(CYGPATH_W) 'interface/game_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/game_msg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/game_msg.Tpo" "$(DEPDIR)/game_msg.Po"; else rm -f "$(DEPDIR)/game_msg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/game_msg.cpp' object='game_msg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o game_msg.obj `if test -f 'interface/game_msg.cpp'; then $(CYGPATH_W) 'interface/game_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/game_msg.cpp'; fi`

mouse.o: interface/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mouse.o -MD -MP -MF "$(DEPDIR)/mouse.Tpo" -c -o mouse.o `test -f 'interface/mouse.cpp' || echo '$(srcdir)/'`interface/mouse.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mouse.Tpo" "$(DEPDIR)/mouse.Po"; else rm -f "$(DEPDIR)/mouse.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/mouse.cpp' object='mouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mouse.o `test -f 'interface/mouse.cpp' || echo '$(srcdir)/'`interface/mouse.cpp

mouse.obj: interface/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mouse.obj -MD -MP -MF "$(DEPDIR)/mouse.Tpo" -c -o mouse.obj `if test -f 'interface/mouse.cpp'; then $(CYGPATH_W) 'interface/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/mouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mouse.Tpo" "$(DEPDIR)/mouse.Po"; else rm -f "$(DEPDIR)/mouse.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/mouse.cpp' object='mouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mouse.obj `if test -f 'interface/mouse.cpp'; then $(CYGPATH_W) 'interface/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/mouse.cpp'; fi`

keyboard.o: interface/keyboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keyboard.o -MD -MP -MF "$(DEPDIR)/keyboard.Tpo" -c -o keyboard.o `test -f 'interface/keyboard.cpp' || echo '$(srcdir)/'`interface/keyboard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/keyboard.Tpo" "$(DEPDIR)/keyboard.Po"; else rm -f "$(DEPDIR)/keyboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/keyboard.cpp' object='keyboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keyboard.o `test -f 'interface/keyboard.cpp' || echo '$(srcdir)/'`interface/keyboard.cpp

keyboard.obj: interface/keyboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keyboard.obj -MD -MP -MF "$(DEPDIR)/keyboard.Tpo" -c -o keyboard.obj `if test -f 'interface/keyboard.cpp'; then $(CYGPATH_W) 'interface/keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/keyboard.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/keyboard.Tpo" "$(DEPDIR)/keyboard.Po"; else rm -f "$(DEPDIR)/keyboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/keyboard.cpp' object='keyboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keyboard.obj `if test -f 'interface/keyboard.cpp'; then $(CYGPATH_W) 'interface/keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/keyboard.cpp'; fi`

physical_obj.o: object/physical_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physical_obj.o -MD -MP -MF "$(DEPDIR)/physical_obj.Tpo" -c -o physical_obj.o `test -f 'object/physical_obj.cpp' || echo '$(srcdir)/'`object/physical_obj.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/physical_obj.Tpo" "$(DEPDIR)/physical_obj.Po"; else rm -f "$(DEPDIR)/physical_obj.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/physical_obj.cpp' object='physical_obj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physical_obj.o `test -f 'object/physical_obj.cpp' || echo '$(srcdir)/'`object/physical_obj.cpp

physical_obj.obj: object/physical_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physical_obj.obj -MD -MP -MF "$(DEPDIR)/physical_obj.Tpo" -c -o physical_obj.obj `if test -f 'object/physical_obj.cpp'; then $(CYGPATH_W) 'object/physical_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/object/physical_obj.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/physical_obj.Tpo" "$(DEPDIR)/physical_obj.Po"; else rm -f "$(DEPDIR)/physical_obj.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/physical_obj.cpp' object='physical_obj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physical_obj.obj `if test -f 'object/physical_obj.cpp'; then $(CYGPATH_W) 'object/physical_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/object/physical_obj.cpp'; fi`

physics.o: object/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physics.o -MD -MP -MF "$(DEPDIR)/physics.Tpo" -c -o physics.o `test -f 'object/physics.cpp' || echo '$(srcdir)/'`object/physics.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/physics.Tpo" "$(DEPDIR)/physics.Po"; else rm -f "$(DEPDIR)/physics.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/physics.cpp' object='physics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physics.o `test -f 'object/physics.cpp' || echo '$(srcdir)/'`object/physics.cpp

physics.obj: object/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physics.obj -MD -MP -MF "$(DEPDIR)/physics.Tpo" -c -o physics.obj `if test -f 'object/physics.cpp'; then $(CYGPATH_W) 'object/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/object/physics.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/physics.Tpo" "$(DEPDIR)/physics.Po"; else rm -f "$(DEPDIR)/physics.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/physics.cpp' object='physics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physics.obj `if test -f 'object/physics.cpp'; then $(CYGPATH_W) 'object/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/object/physics.cpp'; fi`

bonus_box.o: object/bonus_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bonus_box.o -MD -MP -MF "$(DEPDIR)/bonus_box.Tpo" -c -o bonus_box.o `test -f 'object/bonus_box.cpp' || echo '$(srcdir)/'`object/bonus_box.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bonus_box.Tpo" "$(DEPDIR)/bonus_box.Po"; else rm -f "$(DEPDIR)/bonus_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/bonus_box.cpp' object='bonus_box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bonus_box.o `test -f 'object/bonus_box.cpp' || echo '$(srcdir)/'`object/bonus_box.cpp

bonus_box.obj: object/bonus_box.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bonus_box.obj -MD -MP -MF "$(DEPDIR)/bonus_box.Tpo" -c -o bonus_box.obj `if test -f 'object/bonus_box.cpp'; then $(CYGPATH_W) 'object/bonus_box.cpp'; else $(CYGPATH_W) '$(srcdir)/object/bonus_box.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bonus_box.Tpo" "$(DEPDIR)/bonus_box.Po"; else rm -f "$(DEPDIR)/bonus_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/bonus_box.cpp' object='bonus_box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bonus_box.obj `if test -f 'object/bonus_box.cpp'; then $(CYGPATH_W) 'object/bonus_box.cpp'; else $(CYGPATH_W) '$(srcdir)/object/bonus_box.cpp'; fi`

objects_list.o: object/objects_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objects_list.o -MD -MP -MF "$(DEPDIR)/objects_list.Tpo" -c -o objects_list.o `test -f 'object/objects_list.cpp' || echo '$(srcdir)/'`object/objects_list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/objects_list.Tpo" "$(DEPDIR)/objects_list.Po"; else rm -f "$(DEPDIR)/objects_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objects_list.cpp' object='objects_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objects_list.o `test -f 'object/objects_list.cpp' || echo '$(srcdir)/'`object/objects_list.cpp

objects_list.obj: object/objects_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objects_list.obj -MD -MP -MF "$(DEPDIR)/objects_list.Tpo" -c -o objects_list.obj `if test -f 'object/objects_list.cpp'; then $(CYGPATH_W) 'object/objects_list.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objects_list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/objects_list.Tpo" "$(DEPDIR)/objects_list.Po"; else rm -f "$(DEPDIR)/objects_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objects_list.cpp' object='objects_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objects_list.obj `if test -f 'object/objects_list.cpp'; then $(CYGPATH_W) 'object/objects_list.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objects_list.cpp'; fi`

particle.o: object/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT particle.o -MD -MP -MF "$(DEPDIR)/particle.Tpo" -c -o particle.o `test -f 'object/particle.cpp' || echo '$(srcdir)/'`object/particle.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/particle.Tpo" "$(DEPDIR)/particle.Po"; else rm -f "$(DEPDIR)/particle.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/particle.cpp' object='particle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o particle.o `test -f 'object/particle.cpp' || echo '$(srcdir)/'`object/particle.cpp

particle.obj: object/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT particle.obj -MD -MP -MF "$(DEPDIR)/particle.Tpo" -c -o particle.obj `if test -f 'object/particle.cpp'; then $(CYGPATH_W) 'object/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/object/particle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/particle.Tpo" "$(DEPDIR)/particle.Po"; else rm -f "$(DEPDIR)/particle.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/particle.cpp' object='particle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o particle.obj `if test -f 'object/particle.cpp'; then $(CYGPATH_W) 'object/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/object/particle.cpp'; fi`

map.o: map/map.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map.o -MD -MP -MF "$(DEPDIR)/map.Tpo" -c -o map.o `test -f 'map/map.cpp' || echo '$(srcdir)/'`map/map.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/map.Tpo" "$(DEPDIR)/map.Po"; else rm -f "$(DEPDIR)/map.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/map.cpp' object='map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map.o `test -f 'map/map.cpp' || echo '$(srcdir)/'`map/map.cpp

map.obj: map/map.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map.obj -MD -MP -MF "$(DEPDIR)/map.Tpo" -c -o map.obj `if test -f 'map/map.cpp'; then $(CYGPATH_W) 'map/map.cpp'; else $(CYGPATH_W) '$(srcdir)/map/map.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/map.Tpo" "$(DEPDIR)/map.Po"; else rm -f "$(DEPDIR)/map.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/map.cpp' object='map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map.obj `if test -f 'map/map.cpp'; then $(CYGPATH_W) 'map/map.cpp'; else $(CYGPATH_W) '$(srcdir)/map/map.cpp'; fi`

maps_list.o: map/maps_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT maps_list.o -MD -MP -MF "$(DEPDIR)/maps_list.Tpo" -c -o maps_list.o `test -f 'map/maps_list.cpp' || echo '$(srcdir)/'`map/maps_list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/maps_list.Tpo" "$(DEPDIR)/maps_list.Po"; else rm -f "$(DEPDIR)/maps_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/maps_list.cpp' object='maps_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o maps_list.o `test -f 'map/maps_list.cpp' || echo '$(srcdir)/'`map/maps_list.cpp

maps_list.obj: map/maps_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT maps_list.obj -MD -MP -MF "$(DEPDIR)/maps_list.Tpo" -c -o maps_list.obj `if test -f 'map/maps_list.cpp'; then $(CYGPATH_W) 'map/maps_list.cpp'; else $(CYGPATH_W) '$(srcdir)/map/maps_list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/maps_list.Tpo" "$(DEPDIR)/maps_list.Po"; else rm -f "$(DEPDIR)/maps_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/maps_list.cpp' object='maps_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o maps_list.obj `if test -f 'map/maps_list.cpp'; then $(CYGPATH_W) 'map/maps_list.cpp'; else $(CYGPATH_W) '$(srcdir)/map/maps_list.cpp'; fi`

sky.o: map/sky.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sky.o -MD -MP -MF "$(DEPDIR)/sky.Tpo" -c -o sky.o `test -f 'map/sky.cpp' || echo '$(srcdir)/'`map/sky.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sky.Tpo" "$(DEPDIR)/sky.Po"; else rm -f "$(DEPDIR)/sky.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/sky.cpp' object='sky.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sky.o `test -f 'map/sky.cpp' || echo '$(srcdir)/'`map/sky.cpp

sky.obj: map/sky.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sky.obj -MD -MP -MF "$(DEPDIR)/sky.Tpo" -c -o sky.obj `if test -f 'map/sky.cpp'; then $(CYGPATH_W) 'map/sky.cpp'; else $(CYGPATH_W) '$(srcdir)/map/sky.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sky.Tpo" "$(DEPDIR)/sky.Po"; else rm -f "$(DEPDIR)/sky.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/sky.cpp' object='sky.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sky.obj `if test -f 'map/sky.cpp'; then $(CYGPATH_W) 'map/sky.cpp'; else $(CYGPATH_W) '$(srcdir)/map/sky.cpp'; fi`

tile.o: map/tile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tile.o -MD -MP -MF "$(DEPDIR)/tile.Tpo" -c -o tile.o `test -f 'map/tile.cpp' || echo '$(srcdir)/'`map/tile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tile.Tpo" "$(DEPDIR)/tile.Po"; else rm -f "$(DEPDIR)/tile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/tile.cpp' object='tile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tile.o `test -f 'map/tile.cpp' || echo '$(srcdir)/'`map/tile.cpp

tile.obj: map/tile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tile.obj -MD -MP -MF "$(DEPDIR)/tile.Tpo" -c -o tile.obj `if test -f 'map/tile.cpp'; then $(CYGPATH_W) 'map/tile.cpp'; else $(CYGPATH_W) '$(srcdir)/map/tile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tile.Tpo" "$(DEPDIR)/tile.Po"; else rm -f "$(DEPDIR)/tile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/tile.cpp' object='tile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tile.obj `if test -f 'map/tile.cpp'; then $(CYGPATH_W) 'map/tile.cpp'; else $(CYGPATH_W) '$(srcdir)/map/tile.cpp'; fi`

water.o: map/water.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT water.o -MD -MP -MF "$(DEPDIR)/water.Tpo" -c -o water.o `test -f 'map/water.cpp' || echo '$(srcdir)/'`map/water.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/water.Tpo" "$(DEPDIR)/water.Po"; else rm -f "$(DEPDIR)/water.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/water.cpp' object='water.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o water.o `test -f 'map/water.cpp' || echo '$(srcdir)/'`map/water.cpp

water.obj: map/water.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT water.obj -MD -MP -MF "$(DEPDIR)/water.Tpo" -c -o water.obj `if test -f 'map/water.cpp'; then $(CYGPATH_W) 'map/water.cpp'; else $(CYGPATH_W) '$(srcdir)/map/water.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/water.Tpo" "$(DEPDIR)/water.Po"; else rm -f "$(DEPDIR)/water.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/water.cpp' object='water.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o water.obj `if test -f 'map/water.cpp'; then $(CYGPATH_W) 'map/water.cpp'; else $(CYGPATH_W) '$(srcdir)/map/water.cpp'; fi`

wind.o: map/wind.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wind.o -MD -MP -MF "$(DEPDIR)/wind.Tpo" -c -o wind.o `test -f 'map/wind.cpp' || echo '$(srcdir)/'`map/wind.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/wind.Tpo" "$(DEPDIR)/wind.Po"; else rm -f "$(DEPDIR)/wind.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/wind.cpp' object='wind.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wind.o `test -f 'map/wind.cpp' || echo '$(srcdir)/'`map/wind.cpp

wind.obj: map/wind.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wind.obj -MD -MP -MF "$(DEPDIR)/wind.Tpo" -c -o wind.obj `if test -f 'map/wind.cpp'; then $(CYGPATH_W) 'map/wind.cpp'; else $(CYGPATH_W) '$(srcdir)/map/wind.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/wind.Tpo" "$(DEPDIR)/wind.Po"; else rm -f "$(DEPDIR)/wind.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/wind.cpp' object='wind.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wind.obj `if test -f 'map/wind.cpp'; then $(CYGPATH_W) 'map/wind.cpp'; else $(CYGPATH_W) '$(srcdir)/map/wind.cpp'; fi`

camera.o: map/camera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.o -MD -MP -MF "$(DEPDIR)/camera.Tpo" -c -o camera.o `test -f 'map/camera.cpp' || echo '$(srcdir)/'`map/camera.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/camera.Tpo" "$(DEPDIR)/camera.Po"; else rm -f "$(DEPDIR)/camera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/camera.cpp' object='camera.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.o `test -f 'map/camera.cpp' || echo '$(srcdir)/'`map/camera.cpp

camera.obj: map/camera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.obj -MD -MP -MF "$(DEPDIR)/camera.Tpo" -c -o camera.obj `if test -f 'map/camera.cpp'; then $(CYGPATH_W) 'map/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/map/camera.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/camera.Tpo" "$(DEPDIR)/camera.Po"; else rm -f "$(DEPDIR)/camera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/camera.cpp' object='camera.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.obj `if test -f 'map/camera.cpp'; then $(CYGPATH_W) 'map/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/map/camera.cpp'; fi`

ground.o: map/ground.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ground.o -MD -MP -MF "$(DEPDIR)/ground.Tpo" -c -o ground.o `test -f 'map/ground.cpp' || echo '$(srcdir)/'`map/ground.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ground.Tpo" "$(DEPDIR)/ground.Po"; else rm -f "$(DEPDIR)/ground.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/ground.cpp' object='ground.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ground.o `test -f 'map/ground.cpp' || echo '$(srcdir)/'`map/ground.cpp

ground.obj: map/ground.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ground.obj -MD -MP -MF "$(DEPDIR)/ground.Tpo" -c -o ground.obj `if test -f 'map/ground.cpp'; then $(CYGPATH_W) 'map/ground.cpp'; else $(CYGPATH_W) '$(srcdir)/map/ground.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ground.Tpo" "$(DEPDIR)/ground.Po"; else rm -f "$(DEPDIR)/ground.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='map/ground.cpp' object='ground.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ground.obj `if test -f 'map/ground.cpp'; then $(CYGPATH_W) 'map/ground.cpp'; else $(CYGPATH_W) '$(srcdir)/map/ground.cpp'; fi`

character.o: team/character.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT character.o -MD -MP -MF "$(DEPDIR)/character.Tpo" -c -o character.o `test -f 'team/character.cpp' || echo '$(srcdir)/'`team/character.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/character.Tpo" "$(DEPDIR)/character.Po"; else rm -f "$(DEPDIR)/character.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/character.cpp' object='character.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o character.o `test -f 'team/character.cpp' || echo '$(srcdir)/'`team/character.cpp

character.obj: team/character.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT character.obj -MD -MP -MF "$(DEPDIR)/character.Tpo" -c -o character.obj `if test -f 'team/character.cpp'; then $(CYGPATH_W) 'team/character.cpp'; else $(CYGPATH_W) '$(srcdir)/team/character.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/character.Tpo" "$(DEPDIR)/character.Po"; else rm -f "$(DEPDIR)/character.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/character.cpp' object='character.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o character.obj `if test -f 'team/character.cpp'; then $(CYGPATH_W) 'team/character.cpp'; else $(CYGPATH_W) '$(srcdir)/team/character.cpp'; fi`

move.o: team/move.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT move.o -MD -MP -MF "$(DEPDIR)/move.Tpo" -c -o move.o `test -f 'team/move.cpp' || echo '$(srcdir)/'`team/move.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/move.Tpo" "$(DEPDIR)/move.Po"; else rm -f "$(DEPDIR)/move.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/move.cpp' object='move.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o move.o `test -f 'team/move.cpp' || echo '$(srcdir)/'`team/move.cpp

move.obj: team/move.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT move.obj -MD -MP -MF "$(DEPDIR)/move.Tpo" -c -o move.obj `if test -f 'team/move.cpp'; then $(CYGPATH_W) 'team/move.cpp'; else $(CYGPATH_W) '$(srcdir)/team/move.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/move.Tpo" "$(DEPDIR)/move.Po"; else rm -f "$(DEPDIR)/move.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/move.cpp' object='move.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o move.obj `if test -f 'team/move.cpp'; then $(CYGPATH_W) 'team/move.cpp'; else $(CYGPATH_W) '$(srcdir)/team/move.cpp'; fi`

skin.o: team/skin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT skin.o -MD -MP -MF "$(DEPDIR)/skin.Tpo" -c -o skin.o `test -f 'team/skin.cpp' || echo '$(srcdir)/'`team/skin.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/skin.Tpo" "$(DEPDIR)/skin.Po"; else rm -f "$(DEPDIR)/skin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/skin.cpp' object='skin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o skin.o `test -f 'team/skin.cpp' || echo '$(srcdir)/'`team/skin.cpp

skin.obj: team/skin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT skin.obj -MD -MP -MF "$(DEPDIR)/skin.Tpo" -c -o skin.obj `if test -f 'team/skin.cpp'; then $(CYGPATH_W) 'team/skin.cpp'; else $(CYGPATH_W) '$(srcdir)/team/skin.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/skin.Tpo" "$(DEPDIR)/skin.Po"; else rm -f "$(DEPDIR)/skin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/skin.cpp' object='skin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o skin.obj `if test -f 'team/skin.cpp'; then $(CYGPATH_W) 'team/skin.cpp'; else $(CYGPATH_W) '$(srcdir)/team/skin.cpp'; fi`

team.o: team/team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT team.o -MD -MP -MF "$(DEPDIR)/team.Tpo" -c -o team.o `test -f 'team/team.cpp' || echo '$(srcdir)/'`team/team.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/team.Tpo" "$(DEPDIR)/team.Po"; else rm -f "$(DEPDIR)/team.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/team.cpp' object='team.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o team.o `test -f 'team/team.cpp' || echo '$(srcdir)/'`team/team.cpp

team.obj: team/team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT team.obj -MD -MP -MF "$(DEPDIR)/team.Tpo" -c -o team.obj `if test -f 'team/team.cpp'; then $(CYGPATH_W) 'team/team.cpp'; else $(CYGPATH_W) '$(srcdir)/team/team.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/team.Tpo" "$(DEPDIR)/team.Po"; else rm -f "$(DEPDIR)/team.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/team.cpp' object='team.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o team.obj `if test -f 'team/team.cpp'; then $(CYGPATH_W) 'team/team.cpp'; else $(CYGPATH_W) '$(srcdir)/team/team.cpp'; fi`

team_energy.o: team/team_energy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT team_energy.o -MD -MP -MF "$(DEPDIR)/team_energy.Tpo" -c -o team_energy.o `test -f 'team/team_energy.cpp' || echo '$(srcdir)/'`team/team_energy.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/team_energy.Tpo" "$(DEPDIR)/team_energy.Po"; else rm -f "$(DEPDIR)/team_energy.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/team_energy.cpp' object='team_energy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o team_energy.o `test -f 'team/team_energy.cpp' || echo '$(srcdir)/'`team/team_energy.cpp

team_energy.obj: team/team_energy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT team_energy.obj -MD -MP -MF "$(DEPDIR)/team_energy.Tpo" -c -o team_energy.obj `if test -f 'team/team_energy.cpp'; then $(CYGPATH_W) 'team/team_energy.cpp'; else $(CYGPATH_W) '$(srcdir)/team/team_energy.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/team_energy.Tpo" "$(DEPDIR)/team_energy.Po"; else rm -f "$(DEPDIR)/team_energy.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/team_energy.cpp' object='team_energy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o team_energy.obj `if test -f 'team/team_energy.cpp'; then $(CYGPATH_W) 'team/team_energy.cpp'; else $(CYGPATH_W) '$(srcdir)/team/team_energy.cpp'; fi`

teams_list.o: team/teams_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT teams_list.o -MD -MP -MF "$(DEPDIR)/teams_list.Tpo" -c -o teams_list.o `test -f 'team/teams_list.cpp' || echo '$(srcdir)/'`team/teams_list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/teams_list.Tpo" "$(DEPDIR)/teams_list.Po"; else rm -f "$(DEPDIR)/teams_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/teams_list.cpp' object='teams_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o teams_list.o `test -f 'team/teams_list.cpp' || echo '$(srcdir)/'`team/teams_list.cpp

teams_list.obj: team/teams_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT teams_list.obj -MD -MP -MF "$(DEPDIR)/teams_list.Tpo" -c -o teams_list.obj `if test -f 'team/teams_list.cpp'; then $(CYGPATH_W) 'team/teams_list.cpp'; else $(CYGPATH_W) '$(srcdir)/team/teams_list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/teams_list.Tpo" "$(DEPDIR)/teams_list.Po"; else rm -f "$(DEPDIR)/teams_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='team/teams_list.cpp' object='teams_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o teams_list.obj `if test -f 'team/teams_list.cpp'; then $(CYGPATH_W) 'team/teams_list.cpp'; else $(CYGPATH_W) '$(srcdir)/team/teams_list.cpp'; fi`

weapon.o: weapon/weapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon.o -MD -MP -MF "$(DEPDIR)/weapon.Tpo" -c -o weapon.o `test -f 'weapon/weapon.cpp' || echo '$(srcdir)/'`weapon/weapon.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon.Tpo" "$(DEPDIR)/weapon.Po"; else rm -f "$(DEPDIR)/weapon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon.cpp' object='weapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon.o `test -f 'weapon/weapon.cpp' || echo '$(srcdir)/'`weapon/weapon.cpp

weapon.obj: weapon/weapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon.obj -MD -MP -MF "$(DEPDIR)/weapon.Tpo" -c -o weapon.obj `if test -f 'weapon/weapon.cpp'; then $(CYGPATH_W) 'weapon/weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon.Tpo" "$(DEPDIR)/weapon.Po"; else rm -f "$(DEPDIR)/weapon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon.cpp' object='weapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon.obj `if test -f 'weapon/weapon.cpp'; then $(CYGPATH_W) 'weapon/weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon.cpp'; fi`

weapon_cfg.o: weapon/weapon_cfg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_cfg.o -MD -MP -MF "$(DEPDIR)/weapon_cfg.Tpo" -c -o weapon_cfg.o `test -f 'weapon/weapon_cfg.cpp' || echo '$(srcdir)/'`weapon/weapon_cfg.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_cfg.Tpo" "$(DEPDIR)/weapon_cfg.Po"; else rm -f "$(DEPDIR)/weapon_cfg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon_cfg.cpp' object='weapon_cfg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_cfg.o `test -f 'weapon/weapon_cfg.cpp' || echo '$(srcdir)/'`weapon/weapon_cfg.cpp

weapon_cfg.obj: weapon/weapon_cfg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_cfg.obj -MD -MP -MF "$(DEPDIR)/weapon_cfg.Tpo" -c -o weapon_cfg.obj `if test -f 'weapon/weapon_cfg.cpp'; then $(CYGPATH_W) 'weapon/weapon_cfg.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon_cfg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_cfg.Tpo" "$(DEPDIR)/weapon_cfg.Po"; else rm -f "$(DEPDIR)/weapon_cfg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon_cfg.cpp' object='weapon_cfg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_cfg.obj `if test -f 'weapon/weapon_cfg.cpp'; then $(CYGPATH_W) 'weapon/weapon_cfg.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon_cfg.cpp'; fi`

weapons_list.o: weapon/weapons_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapons_list.o -MD -MP -MF "$(DEPDIR)/weapons_list.Tpo" -c -o weapons_list.o `test -f 'weapon/weapons_list.cpp' || echo '$(srcdir)/'`weapon/weapons_list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapons_list.Tpo" "$(DEPDIR)/weapons_list.Po"; else rm -f "$(DEPDIR)/weapons_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons_list.cpp' object='weapons_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapons_list.o `test -f 'weapon/weapons_list.cpp' || echo '$(srcdir)/'`weapon/weapons_list.cpp

weapons_list.obj: weapon/weapons_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapons_list.obj -MD -MP -MF "$(DEPDIR)/weapons_list.Tpo" -c -o weapons_list.obj `if test -f 'weapon/weapons_list.cpp'; then $(CYGPATH_W) 'weapon/weapons_list.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons_list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapons_list.Tpo" "$(DEPDIR)/weapons_list.Po"; else rm -f "$(DEPDIR)/weapons_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons_list.cpp' object='weapons_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapons_list.obj `if test -f 'weapon/weapons_list.cpp'; then $(CYGPATH_W) 'weapon/weapons_list.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons_list.cpp'; fi`

weapon_tools.o: weapon/weapon_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_tools.o -MD -MP -MF "$(DEPDIR)/weapon_tools.Tpo" -c -o weapon_tools.o `test -f 'weapon/weapon_tools.cpp' || echo '$(srcdir)/'`weapon/weapon_tools.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_tools.Tpo" "$(DEPDIR)/weapon_tools.Po"; else rm -f "$(DEPDIR)/weapon_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon_tools.cpp' object='weapon_tools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_tools.o `test -f 'weapon/weapon_tools.cpp' || echo '$(srcdir)/'`weapon/weapon_tools.cpp

weapon_tools.obj: weapon/weapon_tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapon_tools.obj -MD -MP -MF "$(DEPDIR)/weapon_tools.Tpo" -c -o weapon_tools.obj `if test -f 'weapon/weapon_tools.cpp'; then $(CYGPATH_W) 'weapon/weapon_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon_tools.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weapon_tools.Tpo" "$(DEPDIR)/weapon_tools.Po"; else rm -f "$(DEPDIR)/weapon_tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapon_tools.cpp' object='weapon_tools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapon_tools.obj `if test -f 'weapon/weapon_tools.cpp'; then $(CYGPATH_W) 'weapon/weapon_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapon_tools.cpp'; fi`

crosshair.o: weapon/crosshair.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crosshair.o -MD -MP -MF "$(DEPDIR)/crosshair.Tpo" -c -o crosshair.o `test -f 'weapon/crosshair.cpp' || echo '$(srcdir)/'`weapon/crosshair.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/crosshair.Tpo" "$(DEPDIR)/crosshair.Po"; else rm -f "$(DEPDIR)/crosshair.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/crosshair.cpp' object='crosshair.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crosshair.o `test -f 'weapon/crosshair.cpp' || echo '$(srcdir)/'`weapon/crosshair.cpp

crosshair.obj: weapon/crosshair.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crosshair.obj -MD -MP -MF "$(DEPDIR)/crosshair.Tpo" -c -o crosshair.obj `if test -f 'weapon/crosshair.cpp'; then $(CYGPATH_W) 'weapon/crosshair.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/crosshair.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/crosshair.Tpo" "$(DEPDIR)/crosshair.Po"; else rm -f "$(DEPDIR)/crosshair.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/crosshair.cpp' object='crosshair.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crosshair.obj `if test -f 'weapon/crosshair.cpp'; then $(CYGPATH_W) 'weapon/crosshair.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/crosshair.cpp'; fi`

air_attack.o: weapon/air_attack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT air_attack.o -MD -MP -MF "$(DEPDIR)/air_attack.Tpo" -c -o air_attack.o `test -f 'weapon/air_attack.cpp' || echo '$(srcdir)/'`weapon/air_attack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/air_attack.Tpo" "$(DEPDIR)/air_attack.Po"; else rm -f "$(DEPDIR)/air_attack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/air_attack.cpp' object='air_attack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o air_attack.o `test -f 'weapon/air_attack.cpp' || echo '$(srcdir)/'`weapon/air_attack.cpp

air_attack.obj: weapon/air_attack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT air_attack.obj -MD -MP -MF "$(DEPDIR)/air_attack.Tpo" -c -o air_attack.obj `if test -f 'weapon/air_attack.cpp'; then $(CYGPATH_W) 'weapon/air_attack.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/air_attack.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/air_attack.Tpo" "$(DEPDIR)/air_attack.Po"; else rm -f "$(DEPDIR)/air_attack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/air_attack.cpp' object='air_attack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o air_attack.obj `if test -f 'weapon/air_attack.cpp'; then $(CYGPATH_W) 'weapon/air_attack.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/air_attack.cpp'; fi`

auto_bazooka.o: weapon/auto_bazooka.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auto_bazooka.o -MD -MP -MF "$(DEPDIR)/auto_bazooka.Tpo" -c -o auto_bazooka.o `test -f 'weapon/auto_bazooka.cpp' || echo '$(srcdir)/'`weapon/auto_bazooka.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/auto_bazooka.Tpo" "$(DEPDIR)/auto_bazooka.Po"; else rm -f "$(DEPDIR)/auto_bazooka.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/auto_bazooka.cpp' object='auto_bazooka.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auto_bazooka.o `test -f 'weapon/auto_bazooka.cpp' || echo '$(srcdir)/'`weapon/auto_bazooka.cpp

auto_bazooka.obj: weapon/auto_bazooka.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auto_bazooka.obj -MD -MP -MF "$(DEPDIR)/auto_bazooka.Tpo" -c -o auto_bazooka.obj `if test -f 'weapon/auto_bazooka.cpp'; then $(CYGPATH_W) 'weapon/auto_bazooka.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/auto_bazooka.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/auto_bazooka.Tpo" "$(DEPDIR)/auto_bazooka.Po"; else rm -f "$(DEPDIR)/auto_bazooka.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/auto_bazooka.cpp' object='auto_bazooka.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auto_bazooka.obj `if test -f 'weapon/auto_bazooka.cpp'; then $(CYGPATH_W) 'weapon/auto_bazooka.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/auto_bazooka.cpp'; fi`

baseball.o: weapon/baseball.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT baseball.o -MD -MP -MF "$(DEPDIR)/baseball.Tpo" -c -o baseball.o `test -f 'weapon/baseball.cpp' || echo '$(srcdir)/'`weapon/baseball.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/baseball.Tpo" "$(DEPDIR)/baseball.Po"; else rm -f "$(DEPDIR)/baseball.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/baseball.cpp' object='baseball.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o baseball.o `test -f 'weapon/baseball.cpp' || echo '$(srcdir)/'`weapon/baseball.cpp

baseball.obj: weapon/baseball.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT baseball.obj -MD -MP -MF "$(DEPDIR)/baseball.Tpo" -c -o baseball.obj `if test -f 'weapon/baseball.cpp'; then $(CYGPATH_W) 'weapon/baseball.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/baseball.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/baseball.Tpo" "$(DEPDIR)/baseball.Po"; else rm -f "$(DEPDIR)/baseball.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/baseball.cpp' object='baseball.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o baseball.obj `if test -f 'weapon/baseball.cpp'; then $(CYGPATH_W) 'weapon/baseball.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/baseball.cpp'; fi`

bazooka.o: weapon/bazooka.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bazooka.o -MD -MP -MF "$(DEPDIR)/bazooka.Tpo" -c -o bazooka.o `test -f 'weapon/bazooka.cpp' || echo '$(srcdir)/'`weapon/bazooka.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bazooka.Tpo" "$(DEPDIR)/bazooka.Po"; else rm -f "$(DEPDIR)/bazooka.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/bazooka.cpp' object='bazooka.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bazooka.o `test -f 'weapon/bazooka.cpp' || echo '$(srcdir)/'`weapon/bazooka.cpp

bazooka.obj: weapon/bazooka.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bazooka.obj -MD -MP -MF "$(DEPDIR)/bazooka.Tpo" -c -o bazooka.obj `if test -f 'weapon/bazooka.cpp'; then $(CYGPATH_W) 'weapon/bazooka.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/bazooka.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bazooka.Tpo" "$(DEPDIR)/bazooka.Po"; else rm -f "$(DEPDIR)/bazooka.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/bazooka.cpp' object='bazooka.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bazooka.obj `if test -f 'weapon/bazooka.cpp'; then $(CYGPATH_W) 'weapon/bazooka.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/bazooka.cpp'; fi`

cluster_bomb.o: weapon/cluster_bomb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cluster_bomb.o -MD -MP -MF "$(DEPDIR)/cluster_bomb.Tpo" -c -o cluster_bomb.o `test -f 'weapon/cluster_bomb.cpp' || echo '$(srcdir)/'`weapon/cluster_bomb.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cluster_bomb.Tpo" "$(DEPDIR)/cluster_bomb.Po"; else rm -f "$(DEPDIR)/cluster_bomb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/cluster_bomb.cpp' object='cluster_bomb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cluster_bomb.o `test -f 'weapon/cluster_bomb.cpp' || echo '$(srcdir)/'`weapon/cluster_bomb.cpp

cluster_bomb.obj: weapon/cluster_bomb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cluster_bomb.obj -MD -MP -MF "$(DEPDIR)/cluster_bomb.Tpo" -c -o cluster_bomb.obj `if test -f 'weapon/cluster_bomb.cpp'; then $(CYGPATH_W) 'weapon/cluster_bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/cluster_bomb.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cluster_bomb.Tpo" "$(DEPDIR)/cluster_bomb.Po"; else rm -f "$(DEPDIR)/cluster_bomb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/cluster_bomb.cpp' object='cluster_bomb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cluster_bomb.obj `if test -f 'weapon/cluster_bomb.cpp'; then $(CYGPATH_W) 'weapon/cluster_bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/cluster_bomb.cpp'; fi`

dynamite.o: weapon/dynamite.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dynamite.o -MD -MP -MF "$(DEPDIR)/dynamite.Tpo" -c -o dynamite.o `test -f 'weapon/dynamite.cpp' || echo '$(srcdir)/'`weapon/dynamite.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dynamite.Tpo" "$(DEPDIR)/dynamite.Po"; else rm -f "$(DEPDIR)/dynamite.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/dynamite.cpp' object='dynamite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dynamite.o `test -f 'weapon/dynamite.cpp' || echo '$(srcdir)/'`weapon/dynamite.cpp

dynamite.obj: weapon/dynamite.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dynamite.obj -MD -MP -MF "$(DEPDIR)/dynamite.Tpo" -c -o dynamite.obj `if test -f 'weapon/dynamite.cpp'; then $(CYGPATH_W) 'weapon/dynamite.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/dynamite.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dynamite.Tpo" "$(DEPDIR)/dynamite.Po"; else rm -f "$(DEPDIR)/dynamite.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/dynamite.cpp' object='dynamite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dynamite.obj `if test -f 'weapon/dynamite.cpp'; then $(CYGPATH_W) 'weapon/dynamite.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/dynamite.cpp'; fi`

gnu.o: weapon/gnu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gnu.o -MD -MP -MF "$(DEPDIR)/gnu.Tpo" -c -o gnu.o `test -f 'weapon/gnu.cpp' || echo '$(srcdir)/'`weapon/gnu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/gnu.Tpo" "$(DEPDIR)/gnu.Po"; else rm -f "$(DEPDIR)/gnu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/gnu.cpp' object='gnu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gnu.o `test -f 'weapon/gnu.cpp' || echo '$(srcdir)/'`weapon/gnu.cpp

gnu.obj: weapon/gnu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gnu.obj -MD -MP -MF "$(DEPDIR)/gnu.Tpo" -c -o gnu.obj `if test -f 'weapon/gnu.cpp'; then $(CYGPATH_W) 'weapon/gnu.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/gnu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/gnu.Tpo" "$(DEPDIR)/gnu.Po"; else rm -f "$(DEPDIR)/gnu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/gnu.cpp' object='gnu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gnu.obj `if test -f 'weapon/gnu.cpp'; then $(CYGPATH_W) 'weapon/gnu.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/gnu.cpp'; fi`

grenade.o: weapon/grenade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grenade.o -MD -MP -MF "$(DEPDIR)/grenade.Tpo" -c -o grenade.o `test -f 'weapon/grenade.cpp' || echo '$(srcdir)/'`weapon/grenade.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/grenade.Tpo" "$(DEPDIR)/grenade.Po"; else rm -f "$(DEPDIR)/grenade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/grenade.cpp' object='grenade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grenade.o `test -f 'weapon/grenade.cpp' || echo '$(srcdir)/'`weapon/grenade.cpp

grenade.obj: weapon/grenade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grenade.obj -MD -MP -MF "$(DEPDIR)/grenade.Tpo" -c -o grenade.obj `if test -f 'weapon/grenade.cpp'; then $(CYGPATH_W) 'weapon/grenade.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/grenade.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/grenade.Tpo" "$(DEPDIR)/grenade.Po"; else rm -f "$(DEPDIR)/grenade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/grenade.cpp' object='grenade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grenade.obj `if test -f 'weapon/grenade.cpp'; then $(CYGPATH_W) 'weapon/grenade.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/grenade.cpp'; fi`

gun.o: weapon/gun.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gun.o -MD -MP -MF "$(DEPDIR)/gun.Tpo" -c -o gun.o `test -f 'weapon/gun.cpp' || echo '$(srcdir)/'`weapon/gun.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/gun.Tpo" "$(DEPDIR)/gun.Po"; else rm -f "$(DEPDIR)/gun.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/gun.cpp' object='gun.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gun.o `test -f 'weapon/gun.cpp' || echo '$(srcdir)/'`weapon/gun.cpp

gun.obj: weapon/gun.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gun.obj -MD -MP -MF "$(DEPDIR)/gun.Tpo" -c -o gun.obj `if test -f 'weapon/gun.cpp'; then $(CYGPATH_W) 'weapon/gun.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/gun.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/gun.Tpo" "$(DEPDIR)/gun.Po"; else rm -f "$(DEPDIR)/gun.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/gun.cpp' object='gun.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gun.obj `if test -f 'weapon/gun.cpp'; then $(CYGPATH_W) 'weapon/gun.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/gun.cpp'; fi`

mine.o: weapon/mine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mine.o -MD -MP -MF "$(DEPDIR)/mine.Tpo" -c -o mine.o `test -f 'weapon/mine.cpp' || echo '$(srcdir)/'`weapon/mine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mine.Tpo" "$(DEPDIR)/mine.Po"; else rm -f "$(DEPDIR)/mine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/mine.cpp' object='mine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mine.o `test -f 'weapon/mine.cpp' || echo '$(srcdir)/'`weapon/mine.cpp

mine.obj: weapon/mine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mine.obj -MD -MP -MF "$(DEPDIR)/mine.Tpo" -c -o mine.obj `if test -f 'weapon/mine.cpp'; then $(CYGPATH_W) 'weapon/mine.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/mine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mine.Tpo" "$(DEPDIR)/mine.Po"; else rm -f "$(DEPDIR)/mine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/mine.cpp' object='mine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mine.obj `if test -f 'weapon/mine.cpp'; then $(CYGPATH_W) 'weapon/mine.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/mine.cpp'; fi`

skip_turn.o: weapon/skip_turn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT skip_turn.o -MD -MP -MF "$(DEPDIR)/skip_turn.Tpo" -c -o skip_turn.o `test -f 'weapon/skip_turn.cpp' || echo '$(srcdir)/'`weapon/skip_turn.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/skip_turn.Tpo" "$(DEPDIR)/skip_turn.Po"; else rm -f "$(DEPDIR)/skip_turn.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/skip_turn.cpp' object='skip_turn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o skip_turn.o `test -f 'weapon/skip_turn.cpp' || echo '$(srcdir)/'`weapon/skip_turn.cpp

skip_turn.obj: weapon/skip_turn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT skip_turn.obj -MD -MP -MF "$(DEPDIR)/skip_turn.Tpo" -c -o skip_turn.obj `if test -f 'weapon/skip_turn.cpp'; then $(CYGPATH_W) 'weapon/skip_turn.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/skip_turn.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/skip_turn.Tpo" "$(DEPDIR)/skip_turn.Po"; else rm -f "$(DEPDIR)/skip_turn.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/skip_turn.cpp' object='skip_turn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o skip_turn.obj `if test -f 'weapon/skip_turn.cpp'; then $(CYGPATH_W) 'weapon/skip_turn.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/skip_turn.cpp'; fi`

suicide.o: weapon/suicide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT suicide.o -MD -MP -MF "$(DEPDIR)/suicide.Tpo" -c -o suicide.o `test -f 'weapon/suicide.cpp' || echo '$(srcdir)/'`weapon/suicide.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/suicide.Tpo" "$(DEPDIR)/suicide.Po"; else rm -f "$(DEPDIR)/suicide.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/suicide.cpp' object='suicide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o suicide.o `test -f 'weapon/suicide.cpp' || echo '$(srcdir)/'`weapon/suicide.cpp

suicide.obj: weapon/suicide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT suicide.obj -MD -MP -MF "$(DEPDIR)/suicide.Tpo" -c -o suicide.obj `if test -f 'weapon/suicide.cpp'; then $(CYGPATH_W) 'weapon/suicide.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/suicide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/suicide.Tpo" "$(DEPDIR)/suicide.Po"; else rm -f "$(DEPDIR)/suicide.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/suicide.cpp' object='suicide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o suicide.obj `if test -f 'weapon/suicide.cpp'; then $(CYGPATH_W) 'weapon/suicide.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/suicide.cpp'; fi`

teleportation.o: weapon/teleportation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT teleportation.o -MD -MP -MF "$(DEPDIR)/teleportation.Tpo" -c -o teleportation.o `test -f 'weapon/teleportation.cpp' || echo '$(srcdir)/'`weapon/teleportation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/teleportation.Tpo" "$(DEPDIR)/teleportation.Po"; else rm -f "$(DEPDIR)/teleportation.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/teleportation.cpp' object='teleportation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o teleportation.o `test -f 'weapon/teleportation.cpp' || echo '$(srcdir)/'`weapon/teleportation.cpp

teleportation.obj: weapon/teleportation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT teleportation.obj -MD -MP -MF "$(DEPDIR)/teleportation.Tpo" -c -o teleportation.obj `if test -f 'weapon/teleportation.cpp'; then $(CYGPATH_W) 'weapon/teleportation.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/teleportation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/teleportation.Tpo" "$(DEPDIR)/teleportation.Po"; else rm -f "$(DEPDIR)/teleportation.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/teleportation.cpp' object='teleportation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o teleportation.obj `if test -f 'weapon/teleportation.cpp'; then $(CYGPATH_W) 'weapon/teleportation.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/teleportation.cpp'; fi`

holly_grenade.o: weapon/holly_grenade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT holly_grenade.o -MD -MP -MF "$(DEPDIR)/holly_grenade.Tpo" -c -o holly_grenade.o `test -f 'weapon/holly_grenade.cpp' || echo '$(srcdir)/'`weapon/holly_grenade.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/holly_grenade.Tpo" "$(DEPDIR)/holly_grenade.Po"; else rm -f "$(DEPDIR)/holly_grenade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/holly_grenade.cpp' object='holly_grenade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o holly_grenade.o `test -f 'weapon/holly_grenade.cpp' || echo '$(srcdir)/'`weapon/holly_grenade.cpp

holly_grenade.obj: weapon/holly_grenade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT holly_grenade.obj -MD -MP -MF "$(DEPDIR)/holly_grenade.Tpo" -c -o holly_grenade.obj `if test -f 'weapon/holly_grenade.cpp'; then $(CYGPATH_W) 'weapon/holly_grenade.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/holly_grenade.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/holly_grenade.Tpo" "$(DEPDIR)/holly_grenade.Po"; else rm -f "$(DEPDIR)/holly_grenade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/holly_grenade.cpp' object='holly_grenade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o holly_grenade.obj `if test -f 'weapon/holly_grenade.cpp'; then $(CYGPATH_W) 'weapon/holly_grenade.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/holly_grenade.cpp'; fi`

airhammer.o: weapon/airhammer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT airhammer.o -MD -MP -MF "$(DEPDIR)/airhammer.Tpo" -c -o airhammer.o `test -f 'weapon/airhammer.cpp' || echo '$(srcdir)/'`weapon/airhammer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/airhammer.Tpo" "$(DEPDIR)/airhammer.Po"; else rm -f "$(DEPDIR)/airhammer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/airhammer.cpp' object='airhammer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o airhammer.o `test -f 'weapon/airhammer.cpp' || echo '$(srcdir)/'`weapon/airhammer.cpp

airhammer.obj: weapon/airhammer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT airhammer.obj -MD -MP -MF "$(DEPDIR)/airhammer.Tpo" -c -o airhammer.obj `if test -f 'weapon/airhammer.cpp'; then $(CYGPATH_W) 'weapon/airhammer.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/airhammer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/airhammer.Tpo" "$(DEPDIR)/airhammer.Po"; else rm -f "$(DEPDIR)/airhammer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/airhammer.cpp' object='airhammer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o airhammer.obj `if test -f 'weapon/airhammer.cpp'; then $(CYGPATH_W) 'weapon/airhammer.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/airhammer.cpp'; fi`

uzi.o: weapon/uzi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uzi.o -MD -MP -MF "$(DEPDIR)/uzi.Tpo" -c -o uzi.o `test -f 'weapon/uzi.cpp' || echo '$(srcdir)/'`weapon/uzi.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/uzi.Tpo" "$(DEPDIR)/uzi.Po"; else rm -f "$(DEPDIR)/uzi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/uzi.cpp' object='uzi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uzi.o `test -f 'weapon/uzi.cpp' || echo '$(srcdir)/'`weapon/uzi.cpp

uzi.obj: weapon/uzi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uzi.obj -MD -MP -MF "$(DEPDIR)/uzi.Tpo" -c -o uzi.obj `if test -f 'weapon/uzi.cpp'; then $(CYGPATH_W) 'weapon/uzi.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/uzi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/uzi.Tpo" "$(DEPDIR)/uzi.Po"; else rm -f "$(DEPDIR)/uzi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/uzi.cpp' object='uzi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uzi.obj `if test -f 'weapon/uzi.cpp'; then $(CYGPATH_W) 'weapon/uzi.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/uzi.cpp'; fi`

jetpack.o: weapon/jetpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jetpack.o -MD -MP -MF "$(DEPDIR)/jetpack.Tpo" -c -o jetpack.o `test -f 'weapon/jetpack.cpp' || echo '$(srcdir)/'`weapon/jetpack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jetpack.Tpo" "$(DEPDIR)/jetpack.Po"; else rm -f "$(DEPDIR)/jetpack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/jetpack.cpp' object='jetpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jetpack.o `test -f 'weapon/jetpack.cpp' || echo '$(srcdir)/'`weapon/jetpack.cpp

jetpack.obj: weapon/jetpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jetpack.obj -MD -MP -MF "$(DEPDIR)/jetpack.Tpo" -c -o jetpack.obj `if test -f 'weapon/jetpack.cpp'; then $(CYGPATH_W) 'weapon/jetpack.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/jetpack.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jetpack.Tpo" "$(DEPDIR)/jetpack.Po"; else rm -f "$(DEPDIR)/jetpack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/jetpack.cpp' object='jetpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jetpack.obj `if test -f 'weapon/jetpack.cpp'; then $(CYGPATH_W) 'weapon/jetpack.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/jetpack.cpp'; fi`

lowgrav.o: weapon/lowgrav.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lowgrav.o -MD -MP -MF "$(DEPDIR)/lowgrav.Tpo" -c -o lowgrav.o `test -f 'weapon/lowgrav.cpp' || echo '$(srcdir)/'`weapon/lowgrav.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/lowgrav.Tpo" "$(DEPDIR)/lowgrav.Po"; else rm -f "$(DEPDIR)/lowgrav.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/lowgrav.cpp' object='lowgrav.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lowgrav.o `test -f 'weapon/lowgrav.cpp' || echo '$(srcdir)/'`weapon/lowgrav.cpp

lowgrav.obj: weapon/lowgrav.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lowgrav.obj -MD -MP -MF "$(DEPDIR)/lowgrav.Tpo" -c -o lowgrav.obj `if test -f 'weapon/lowgrav.cpp'; then $(CYGPATH_W) 'weapon/lowgrav.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/lowgrav.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/lowgrav.Tpo" "$(DEPDIR)/lowgrav.Po"; else rm -f "$(DEPDIR)/lowgrav.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/lowgrav.cpp' object='lowgrav.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lowgrav.obj `if test -f 'weapon/lowgrav.cpp'; then $(CYGPATH_W) 'weapon/lowgrav.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/lowgrav.cpp'; fi`

ninja_rope.o: weapon/ninja_rope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ninja_rope.o -MD -MP -MF "$(DEPDIR)/ninja_rope.Tpo" -c -o ninja_rope.o `test -f 'weapon/ninja_rope.cpp' || echo '$(srcdir)/'`weapon/ninja_rope.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ninja_rope.Tpo" "$(DEPDIR)/ninja_rope.Po"; else rm -f "$(DEPDIR)/ninja_rope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/ninja_rope.cpp' object='ninja_rope.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ninja_rope.o `test -f 'weapon/ninja_rope.cpp' || echo '$(srcdir)/'`weapon/ninja_rope.cpp

ninja_rope.obj: weapon/ninja_rope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ninja_rope.obj -MD -MP -MF "$(DEPDIR)/ninja_rope.Tpo" -c -o ninja_rope.obj `if test -f 'weapon/ninja_rope.cpp'; then $(CYGPATH_W) 'weapon/ninja_rope.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/ninja_rope.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ninja_rope.Tpo" "$(DEPDIR)/ninja_rope.Po"; else rm -f "$(DEPDIR)/ninja_rope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/ninja_rope.cpp' object='ninja_rope.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ninja_rope.obj `if test -f 'weapon/ninja_rope.cpp'; then $(CYGPATH_W) 'weapon/ninja_rope.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/ninja_rope.cpp'; fi`

parachute.o: weapon/parachute.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parachute.o -MD -MP -MF "$(DEPDIR)/parachute.Tpo" -c -o parachute.o `test -f 'weapon/parachute.cpp' || echo '$(srcdir)/'`weapon/parachute.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/parachute.Tpo" "$(DEPDIR)/parachute.Po"; else rm -f "$(DEPDIR)/parachute.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/parachute.cpp' object='parachute.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parachute.o `test -f 'weapon/parachute.cpp' || echo '$(srcdir)/'`weapon/parachute.cpp

parachute.obj: weapon/parachute.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parachute.obj -MD -MP -MF "$(DEPDIR)/parachute.Tpo" -c -o parachute.obj `if test -f 'weapon/parachute.cpp'; then $(CYGPATH_W) 'weapon/parachute.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/parachute.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/parachute.Tpo" "$(DEPDIR)/parachute.Po"; else rm -f "$(DEPDIR)/parachute.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/parachute.cpp' object='parachute.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parachute.obj `if test -f 'weapon/parachute.cpp'; then $(CYGPATH_W) 'weapon/parachute.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/parachute.cpp'; fi`

supertux.o: weapon/supertux.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supertux.o -MD -MP -MF "$(DEPDIR)/supertux.Tpo" -c -o supertux.o `test -f 'weapon/supertux.cpp' || echo '$(srcdir)/'`weapon/supertux.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/supertux.Tpo" "$(DEPDIR)/supertux.Po"; else rm -f "$(DEPDIR)/supertux.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/supertux.cpp' object='supertux.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supertux.o `test -f 'weapon/supertux.cpp' || echo '$(srcdir)/'`weapon/supertux.cpp

supertux.obj: weapon/supertux.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supertux.obj -MD -MP -MF "$(DEPDIR)/supertux.Tpo" -c -o supertux.obj `if test -f 'weapon/supertux.cpp'; then $(CYGPATH_W) 'weapon/supertux.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/supertux.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/supertux.Tpo" "$(DEPDIR)/supertux.Po"; else rm -f "$(DEPDIR)/supertux.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/supertux.cpp' object='supertux.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supertux.obj `if test -f 'weapon/supertux.cpp'; then $(CYGPATH_W) 'weapon/supertux.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/supertux.cpp'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-recursive distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
